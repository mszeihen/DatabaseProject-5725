## **Entity Specification (Character Entity)(Michael Zeihen)**

The Character entity is at the heart of the Dungeon and Dragons game database. Several Entities make up a full character, its stats, xp and the equipment it can wear. Characters get gear from monsters and bosses, bosses being a subtype of monsters. The Character entity has the following attributes:
<font color="red">
**CharacterID:** some definition

**CharacterName:** some name

** add more stats and describe its cardinality**
</font>

<font color="green">

## **Relationships & Structure Analysis (Jacob Sander)**

List all relationships along with their cardinalities (e.g., one-to-many, many-to-many) and participation ratios (total vs. partial participation).


### Cardinality Table (Jacob Sander)

| Entity                          | Cardinality         | Description                                                  |
|---------------------------------|---------------------|--------------------------------------------------------------|
| PLAYER and PLAYER_CHARACTER     | One to Many (1:N)   | One player plays many characters                             |
| PLAYER and PLAYER_Achievement   | One to Many (1:N)   | One player earns many player_achievements                    |
| PLAYER_Achievement ACHIEVEMENT  | One to Many (1:N)   | One player's achievements are                                |
| PLAYER_Character and CHARACTER  | One to One (1:1)    | One PLAYER_CHARACTER belongs to one character instance       |
| CHARACTER and CLASS             | One to One (1:1)    | One CHARACTER belongs to exactly one CLASS                   |
| CHARACTER and RACE              | One to One (1:1)    | One CHARACTER belongs to exactly one RACE                    |
| CHARACTER and EQUIPMENT         | One to Many (1:N)   | One CHARACTER equips one or more EQUIPMENTs                  |
| BOSS and MONSTER                | One to Many (1:N)   | One BOSS supervises many MONSTERs                            |
| MONSTER and NPC                 | One to Many (1:N)   | One MONSTER relates to many NPCs                             |
| NPC and NPC_Faction             | One to Many (1:N)   | One NPC belongs to many factions                             |
| NPC and NPC_Location            | One to Many (1:N)   | One NPC is located in one or more locations                  |
| NPC and CLASS                   | One to One (1:1)    | One NPC has belongs to one class                             |
| NPC and RACE                    | One to One (1:1)    | One NPC belongs to one race                                  |
| CLASS and CLASS_SPELL           | One to Many (1:N)   | One Class has many spells                                    |
| CLASS_SPELL and SPELL           | One to Many (1:N)   | One Class Spell teaches many spells                          |
| CHARACTER and MONSTER           | One to Many (1:N)   | One Character fights many Monsters                           |
| CHARACTER and CHARACTER_EVENT   | One to Many (1:N)   | One Character participates in many Character Events          |
| EVENT and NPC                   | Many to Many (N:N)  | Many NPCs participate in many Events                         |

</font>

<font color = "red">

### Participation Ratio Table (Jacob Sander)  

| Entity                          | Participation        | Description                                             |
|---------------------------------|----------------------|---------------------------------------------------------|
| Player and Character            | Total/Mandatory (1)  | A character must be played by a player                  |
                                  | Partial/Optional(0)  | One player can play 0,1, or many characters             |
| PLAYER and PLAYER_CHARACTER     | Total/Mandatory (1)  | One player_character must belong to exactly one player  |
                                  | Total/Mandatory (1)  | Each player must have a player_character                |
| PLAYER and PLAYER_Achievement   | Total/Mandatory (1)  | Player_achievement must belong to exactly one player    |                                          | Partial/Optional(0)  | Player may have 0 or more player_achievements           |
| PLAYER_Achievement ACHIEVEMENT  | Total/Mandatory (1)  | Each player_achievement must belong to one or more      |
|                                 | Partial/Optional(0)  | achievements. Many achievements belong to one           |        |                                 |                      | player_achievement                                      |
| PLAYER_Character and CHARACTER  | Total/Mandatory (1)  | Each Player_Character has exactly one Character         |
|                                 | Total/Mandatory (1)  | One PLAYER_CHARACTER belongs to one Character           |
| CHARACTER and CLASS             | Total/Mandatory (1)  | Each Character must have exactly one class              |
|                                 | Total/Mandatory (1)  | Each Class must have a character it belongs to          |
| CHARACTER and RACE              | Total/Mandatory (1)  | Each Character must have exactly one race               |
|                                 | Total/Mandatory (1)  | Each race must have a character it belongs to           |
| CHARACTER and EQUIPMENT         | Total/Mandatory (1)  | If equipment is equipped, it is be equipped to character|
|                                 | Partial/Optional(0)  | All equipment is not necessarily equipped to characters |
| BOSS and MONSTER                | Total/Mandatory (1)  | A Boss must be a type of Monster                        |
|                                 | Total/Mandatory (1)  |                                                         |
| MONSTER and NPC                 | Total/Mandatory (1)  | A Monster must be a type of NPC                         |
|                                 | Total/Mandatory (1)  |                                                         | 
| NPC and NPC_Faction             | Total/Mandatory (1)  | One NPC must belong to at least one faction             |
|                                 | Total/Mandatory (1)  | If a faction exists, it must belong to an NPC           |
| NPC and NPC_Location            | Total/Mandatory (1)  | An NPC must belong to a location                        |
|                                 | Partial/Optional(0)  | A location can be empty, e.g., no NPCs are there        |
| NPC and CLASS                   | Total/Mandatory (1)  | An NPC must belong to exactly one class                 |
|                                 | Total/Mandatory (1)  | A class must belong to an NPC                           |
| NPC and RACE                    | Total/Mandatory (1)  | One NPC belongs to one race                             |
|                                 | Total/Mandatory (1)  | A Race must belong to an NPC                            |
| CLASS and CLASS_SPELL           | Total/Mandatory (1)  | A class spell must belong to a class                    |
|                                 | Partial/Optional(0)  | A class may not have any class spells                   |
| CLASS_SPELL and SPELL           | Total/Mandatory (1)  | A spell must be taught by a class spell                 |
|                                 | Partial/Optional(0)  | A class spell may teach many or no spells               |
| CHARACTER and MONSTER           | Total/Mandatory (1)  | A character                                             |
|                                 | Partial/Optional(0)  |                                                         |
| CHARACTER and CHARACTER_EVENT   | One to Many (1:N)   | One Character participates in many Character Events       |
|                                 |                      |                                                          |
| EVENT and NPC                   | Many to Many (N:N)  | Many NPCs participate in many Events                         |
   

</font>

## **Identify and explain (Melanie Ortiz)**

### Strong vs. weak entities

Our database includes a variety of strong and weak entities to represent the complexity of the Dungeons & Dragons ecology.

Strong Entities include:

**Player:** Represents users of the system.

**Character:** The core avatar controlled by a player.

Class, Race, Spell, Equipment, NPC, Event, and Achievement: Each with independent existence and primary keys.

### Weak Entities include (Melanie Ortiz):

**Monster:** Depends on Race and Class for full definition.

**Boss:** A subtype of Monster, inheriting its attributes and adding boss-specific ones like PhaseCount and Lair.

**ClassSpell:** Links Class and Spell in a many-to-one relationship.

**CharacterEquipment:** A many-to-many relationship between Character and Equipment.

**CharacterEvent:** A many-to-many relationship between Character and Event.

**PlayerAchievement:** A many-to-many relationship between Player and Achievement.

These weak entities rely on foreign keys and composite keys to maintain referential integrity and represent dependent relationships.


### Supertypes and subtypes with their distinguishing features. ( Melonie Ortiz)

We implemented a supertype-subtype relationship to model hierarchical data:

**Supertype:** Monster

**Subtype:** Boss

The Boss entity inherits all attributes from Monster (e.g., HP, AC, CR) and introduces additional attributes like PhaseCount and Lair. 
This structure allows us to distinguish between regular monsters and more complex boss encounters while maintaining a unified combat model.

## **Table & Column Constraints (Melonie Ortiz)**

<font color="green">

This is an example from the demo paper in regards to table and column contraints

Supervisor Table

Table Constraint:
        
**Primary Key**(EmployeeID)
        
**Foreign Key**(EmployeeID)[On Delete Cascade On Update Cascade]

**Column Constraint:** Not Null (Category, NumberOfEmployee)

</font>

To ensure data integrity and enforce business rules, we applied the following constraints:

**Primary Keys:** Every entity has a unique identifier (e.g., CharacterID, PlayerID, SpellID).

**Foreign Keys:** Maintain relationships between entities (e.g., charClassID in Character references ClassID).

**NOT NULL:** Ensures essential fields are always populated (e.g., Name, Level, XP).

**CHECK Constraints:** Enforce valid ranges and logic (e.g., Level >= 1, CR >= 0, HP >= 0).

**Composite Keys:** Used in weak entities and many-to-many relationships (e.g., CharacterID + EquipmentID in CharacterEquipment).

**Boolean Constraints:** For fields like Equipped in Equipment, ensuring values are either TRUE or FALSE.

These constraints were critical in supporting normalization, enforcing data consistency, and preparing the schema for implementation in MySQL.

<font color="red">

    - Define all constraints such as:

        - Primary and foreign keys

        - NOT NULL requirements

        - Unique constraints

        - Referential integrity rules

</font>

## **Normalization Goals**

All the tables are in 3NF. This was easily known because there were not many values inserted

