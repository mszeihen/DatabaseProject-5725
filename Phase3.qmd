##  Specification of the Monster Entity

The database stores and manages the ecology, encounters, and progression systems within our **Dungeons & Dragons-inspired role-playing game**. It includes **12 major entities** central to gameplay mechanics. One of these entities is the `MONSTER` entity, which represents creatures that characters can battle during their adventures.

###  Entity Relationships

The `MONSTER` entity is related to the `NPC`, `CLASS`, and `RACE` entities.

- Since **every monster is also an NPC**, the `MONSTER` entity is modeled as a **subtype of the `NPC` entity (supertype)**. This captures the idea that monsters share all attributes of NPCs, such as name and faction, but also have unique characteristics relevant to combat.
- Each monster can optionally be associated with a **combat class** (e.g., Berserker, Spellcaster), making it related to the `CLASS` entity.
- Monsters may also have a **racial origin** (e.g., Dragon, Undead), requiring a relationship with the `RACE` entity.

###  Monster Entity Attributes

| Attribute   | Type        | Description                                                  |
|-------------|-------------|--------------------------------------------------------------|
| `MonsterID` | INT (PK, FK)| Unique identifier; also acts as foreign key to `NPC`         |
| `Name`      | VARCHAR     | Name/type of the monster (e.g., \"Frost Troll\")             |
| `CR`        | FLOAT       | Challenge Rating; used for encounter balancing               |
| `HP`        | INT         | Hit Points; how much damage the monster can take             |
| `AC`        | INT         | Armor Class; how hard it is to hit the monster               |
| `Type`      | VARCHAR     | Category such as Beast, Fiend, Dragon, etc.                  |
| `XP`        | INT         | Experience points granted when defeated                      |
| `RaceID`    | INT (FK)    | Foreign key linking to `RACE`                                |
| `ClassID`   | INT (FK)    | Foreign key linking to `CLASS` (optional)                    |

###  Relationships Summary

- **One-to-One (Mandatory)** with `NPC`: Every monster must also be an NPC.
- **Many-to-One (Optional)** with `CLASS`: Many monsters may share a combat role.
- **Many-to-One (Optional)** with `RACE`: Many monsters may share a racial type.

###  Specialization: Bosses

The `MONSTER` entity is further specialized by the `BOSS` entity. Some monsters are elevated to **boss status**, making them tougher and more unique. These creatures often serve as **major enemies or final challenges** within campaigns.

- The `BOSS` entity is modeled as a **subtype of the `MONSTER` entity**, representing this additional level of specialization.
- All bosses are monsters, but not all monsters are bosses.

This structure supports a **rich and extensible combat ecosystem**, allowing monsters to be categorized and extended according to gameplay needs, while maintaining strong data integrity and consistency.

---


## **Relationships & Structure Analysis**

List all relationships along with their cardinalities (e.g., one-to-many, many-to-many) and participation ratios (total vs. partial participation).


### Cardinality Table

| Entity                          | Cardinality         | Description                                                  |
|---------------------------------|---------------------|--------------------------------------------------------------|
| PLAYER and PLAYER_CHARACTER     | One to Many (1:N)   | One player plays many characters                             |
| PLAYER and PLAYER_Achievement   | One to Many (1:N)   | One player earns many player_achievements                    |
| PLAYER_Achievement ACHIEVEMENT  | One to Many (1:N)   | One player's achievements are                                |
| PLAYER_Character and CHARACTER  | One to One (1:1)    | One PLAYER_CHARACTER belongs to one character instance       |
| CHARACTER and CLASS             | One to One (1:1)    | One CHARACTER belongs to exactly one CLASS                   |
| CHARACTER and RACE              | One to One (1:1)    | One CHARACTER belongs to exactly one RACE                    |
| CHARACTER and EQUIPMENT         | One to Many (1:N)   | One CHARACTER equips one or more EQUIPMENTs                  |
| BOSS and MONSTER                | One to Many (1:N)   | One BOSS supervises many MONSTERs                            |
| MONSTER and NPC                 | One to Many (1:N)   | One MONSTER relates to many NPCs                             |
| NPC and NPC_Faction             | One to Many (1:N)   | One NPC belongs to many factions                             |
| NPC and NPC_Location            | One to Many (1:N)   | One NPC is located in one or more locations                  |
| NPC and CLASS                   | One to One (1:1)    | One NPC has belongs to one class                             |
| NPC and RACE                    | One to One (1:1)    | One NPC belongs to one race                                  |
| CLASS and CLASS_SPELL           | One to Many (1:N)   | One Class has many spells                                    |
| CLASS_SPELL and SPELL           | One to Many (1:N)   | One Class Spell teaches many spells                          |
| CHARACTER and MONSTER           | One to Many (1:N)   | One Character fights many Monsters                           |
| CHARACTER and CHARACTER_EVENT   | One to Many (1:N)   | One Character participates in many Character Events          |
| EVENT and NPC                   | Many to Many (N:N)  | Many NPCs participate in many Events                         |

### Participation Ratio Table 

| Entity                          | Participation        | Description                                             |
|---------------------------------|----------------------|---------------------------------------------------------|
| Player and Character            | Total/Mandatory (1)  | A character must be played by a player                  |
|                                 | Partial/Optional(0)  | One player can play 0,1, or many characters             |
| PLAYER and PLAYER_CHARACTER     | Total/Mandatory (1)  | One player_character must belong to exactly one player  |
|                                 | Total/Mandatory (1)  | Each player must have a player_character                |
| PLAYER and PLAYER_Achievement   | Total/Mandatory (1)  | Player_achievement must belong to exactly one player    |                                     |                                 | Partial/Optional(0)  | Player may have 0 or more player_achievements           |
| PLAYER_Achievement ACHIEVEMENT  | Total/Mandatory (1)  | Each player_achievement must belong to one or more      |
|                                 | Partial/Optional(0)  | achievements. Many achievements belong to one           |
|                                 |                      | player_achievement                                      |
| PLAYER_Character and CHARACTER  | Total/Mandatory (1)  | Each Player_Character has exactly one Character         |
|                                 | Total/Mandatory (1)  | One PLAYER_CHARACTER belongs to one Character           |
| CHARACTER and CLASS             | Total/Mandatory (1)  | Each Character must have exactly one class              |
|                                 | Total/Mandatory (1)  | Each Class must have a character it belongs to          |
| CHARACTER and RACE              | Total/Mandatory (1)  | Each Character must have exactly one race               |
|                                 | Total/Mandatory (1)  | Each race must have a character it belongs to           |
| CHARACTER and EQUIPMENT         | Total/Mandatory (1)  | If equipment is equipped, it is be equipped to character|
|                                 | Partial/Optional(0)  | All equipment is not necessarily equipped to characters |
| BOSS and MONSTER                | Total/Mandatory (1)  | A Boss must be a type of Monster                        |
|                                 | Total/Mandatory (1)  |                                                         |
| MONSTER and NPC                 | Total/Mandatory (1)  | A Monster must be a type of NPC                         |
|                                 | Total/Mandatory (1)  |                                                         | 
| NPC and NPC_Faction             | Total/Mandatory (1)  | One NPC must belong to at least one faction             |
|                                 | Total/Mandatory (1)  | If a faction exists, it must belong to an NPC           |
| NPC and NPC_Location            | Total/Mandatory (1)  | An NPC must belong to a location                        |
|                                 | Partial/Optional(0)  | A location can be empty, e.g., no NPCs are there        |
| NPC and CLASS                   | Total/Mandatory (1)  | An NPC must belong to exactly one class                 |
|                                 | Total/Mandatory (1)  | A class must belong to an NPC                           |
| NPC and RACE                    | Total/Mandatory (1)  | One NPC belongs to one race                             |
|                                 | Total/Mandatory (1)  | A Race must belong to an NPC                            |
| CLASS and CLASS_SPELL           | Total/Mandatory (1)  | A class spell must belong to a class                    |
|                                 | Partial/Optional(0)  | A class may not have any class spells                   |
| CLASS_SPELL and SPELL           | Total/Mandatory (1)  | A spell must be taught by a class spell                 |
|                                 | Partial/Optional(0)  | A class spell may teach many or no spells               |
| CHARACTER and MONSTER           | Total/Mandatory (1)  | A character must battle at least one monster            |
|                                 | Partial/Optional(0)  | A monster may or may not battle a character             |
| CHARACTER and CHARACTER_EVENT   | Total/Mandatory (1)  | A character event must occur with one character         |
|                                 | Partial/Optional(0)  | A character can exist without character events          |                                     
| EVENT and NPC                   | Partial/Optional(0)  | An NPC can exist without participating in events        |
|                                 | Partial/Optional(0)  | Events can exist without participating NPCs             |

## **Identify and explain (Melanie Ortiz)**

### Strong vs. weak entities

Our database includes a variety of strong and weak entities to represent the complexity of the Dungeons & Dragons ecology.

Strong Entities include:

**Player:** Represents users of the system.

**Character:** The core avatar controlled by a player.

Class, Race, Spell, Equipment, NPC, Event, and Achievement: Each with independent existence and primary keys.

### Weak Entities include (Melanie Ortiz):

**Monster:** Depends on Race and Class for full definition.

**Boss:** A subtype of Monster, inheriting its attributes and adding boss-specific ones like PhaseCount and Lair.

**ClassSpell:** Links Class and Spell in a many-to-one relationship.

**CharacterEquipment:** A many-to-many relationship between Character and Equipment.

**CharacterEvent:** A many-to-many relationship between Character and Event.

**PlayerAchievement:** A many-to-many relationship between Player and Achievement.

These weak entities rely on foreign keys and composite keys to maintain referential integrity and represent dependent relationships.


### Supertypes and subtypes with their distinguishing features. ( Melonie Ortiz)

We implemented a supertype-subtype relationship to model hierarchical data:

**Supertype:** Monster

**Subtype:** Boss

The Boss entity inherits all attributes from Monster (e.g., HP, AC, CR) and introduces additional attributes like PhaseCount and Lair. 
This structure allows us to distinguish between regular monsters and more complex boss encounters while maintaining a unified combat model.

## **Table & Column Constraints (Melonie Ortiz)**

* Player Table
+     Table Constraint:
+     Primary Key (PlayerID)
+     Column Constraint:
+     Not Null (Name, Email, JoinDate)
+     Unique (Email)



* Character Table
+     Table Constraint:
+     Primary Key (CharacterID)
+     Foreign Key (PlayerID) [On Delete Cascade On Update Cascade]
+     Foreign Key (ClassID) [On Delete Set Null On Update Set Null]
+     Foreign Key (RaceID) [On Delete Set Null On Update Set Null]
+     Column Constraint:
+     Not Null (Name, Level, XP)
+     Check (Level >= 1, XP >= 0)



Class Table
•     Table Constraint:
•     Primary Key (ClassID)
•     Column Constraint:
•     Not Null (Name)
Race Table
•     Table Constraint:
•     Primary Key (RaceID)
•     Column Constraint:
•     Not Null (Name)
Spell Table
•     Table Constraint:
•     Primary Key (SpellID)
•     Column Constraint:
•     Not Null (Name, Level)
•     Check (Level >= 0)
Equipment Table
•     Table Constraint:
•     Primary Key (EquipmentID)
•     Column Constraint:
•     Not Null (Name, Equipped)
•     Check (Equipped IN (TRUE, FALSE))
NPC Table
•     Table Constraint:
•     Primary Key (NPCID)
•     Column Constraint:
•     Not Null (Name)
Event Table
•     Table Constraint:
•     Primary Key (EventID)
•     Column Constraint:
•     Not Null (Name, Date)
Achievement Table
•     Table Constraint:
•     Primary Key (AchievementID)
•     Column Constraint:
•     Not Null (Title)
Monster Table
•     Table Constraint:
•     Primary Key (MonsterID)
•     Foreign Key (RaceID) [On Delete Set Null On Update Set Null]
•     Foreign Key (ClassID) [On Delete Set Null On Update Set Null]
•     Column Constraint:
•     Not Null (Name, HP, AC, CR)
•     Check (HP >= 0, AC >= 0, CR >= 0)
Boss Table
•     Table Constraint:
•     Primary Key (MonsterID)
•     Foreign Key (MonsterID) [On Delete Cascade On Update Cascade]
•     Column Constraint:
•     Not Null (PhaseCount)
•     Check (PhaseCount >= 1)
ClassSpell Table
•     Table Constraint:
•     Primary Key (ClassID, SpellID)
•     Foreign Key (ClassID) [On Delete Cascade On Update Cascade]
•     Foreign Key (SpellID) [On Delete Cascade On Update Cascade]
CharacterEquipment Table
•     Table Constraint:
•     Primary Key (CharacterID, EquipmentID)
•     Foreign Key (CharacterID) [On Delete Cascade On Update Cascade]
•     Foreign Key (EquipmentID) [On Delete Cascade On Update Cascade]
CharacterEvent Table
•     Table Constraint:
•     Primary Key (CharacterID, EventID)
•     Foreign Key (CharacterID) [On Delete Cascade On Update Cascade]
•     Foreign Key (EventID) [On Delete Cascade On Update Cascade]
PlayerAchievement Table
•     Table Constraint:
•     Primary Key (PlayerID, AchievementID)
•     Foreign Key (PlayerID) [On Delete Cascade On Update Cascade]
•     Foreign Key (AchievementID) [On Delete Cascade On Update Cascade]

## **Normalization Goals**

All the tables are in 3NF. This was easily known because there were not many values inserted

