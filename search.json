[
  {
    "objectID": "erEnglish.html",
    "href": "erEnglish.html",
    "title": "COP-5725---Group-Project",
    "section": "",
    "text": "** 1. A Player has atleast one or many Characters:**\n\nA Player can own one or multiple Characters.\nA Character can only belong to one Player.\n\n** 2. A Character belongs to only one Class:**\n\nA Character is associated with one Class (e.g., Fighter, Wizard).\nA Class can be associated with many Characters.\n\n** 3. A Character belongs to only one Race:**\n\nA Character is associated with one Race (e.g., Human, Elf).\nA Race can be associated with many Characters.\n\n** 4. A Character participates in zero to many Events:**\n\nA Character can be involved none or multiple Events.\nAn Event can involve many Characters.\n\n** 5. A Player earns many Achievements:**\n\nA Player can earn zero or multiple Achievements.\nAn Achievement can be earned by many Players.\n\n** 6. A Character equips zero or many Items:**\n\nA Character can equip multiple Items (e.g., weapons, armor).\nAn Item can be equipped by many Characters.\n\n** 7. An NPC belongs to one Faction:**\n\nAn NPC (Non-Player Character) belongs to one Faction.\nA Faction can have multiple NPCs.\n\n** 8. An NPC can be in One or More Locations:**\n\nAn NPC (Non-Player Character) belongs to one Location.\nA Location can have zero or more NPCs.\n\n** 9. A NPC belongs to one Class:**\n\nA NPC belong belongs to one Class (e.g., Wizard, warrior).\nA Class can classify multiple NPC.\n\n** 10. A NPC belongs to one Race:**\n\nA NPC belongs to one Race (e.g., Dragon, Goblin).\nA Race can be assigned to many NPC.\n\n** 11. A Monster is a subtype of a NPC:**\n\nA Monster is an agressive NPC.\nA monster correspoonds to an NPC, but not every NPC is a monster.\n\n** 12. A Boss is a subtype of a Monster:**\n\nA Boss is a special type of Monster that has unique attributes like fight phases or lair.\nEach Boss corresponds to one Monster, but not every Monster is a Boss.\n\n** 13. A Class teaches many Spells:**\n\nA Class can teach multiple Spells (e.g., Wizards teach Fireball, Lightning Bolt).\nA Spell can be taught by many Classes.\n\n** 14. A Character can fight many Monsters:**\n\nA Character can fight multiple Monsters.\nA Monster can fight many Characters.\n\n** 15. An Event involves many Characters:**\n\nA Character can participate in multiple Events.\nAn Event can involve multiple Characters."
  },
  {
    "objectID": "Phase4.html",
    "href": "Phase4.html",
    "title": "COP-5725---Group-Project",
    "section": "",
    "text": "The Player table creates and stores the player. Each player can control a character that is identified via a name and username.\nThe table is linked to the Character table through the foreign key. The table consists of the following:\nPlayerID: and Int identifies each player and is the primary key\nName: A string consists of the full name of the player\nUserName: a string that contains the player’s username. All usernames must be unique\nCharacterID: An int that is also a foreign key which links to the character table\n\nCREATE TABLE Player ( PlayerID INT PRIMARY KEY,\nName VARCHAR(255),\nUserName VARCHAR(255),\nCharacterID INT,\nFOREIGN KEY (CharacterID) REFERENCES Character(CharacterID) );\n\n\n\n\nCREATE TABLE Character (\nCharacterID INT PRIMARY KEY,\nName VARCHAR(255),\nLevel INT,\nXP INT,\nHP INT,\nMana INT,\nAlignment VARCHAR(255),\ncharClassID INT,\ncharRaceID INT,\nFOREIGN KEY (charClassID) REFERENCES Class(ClassID),\nFOREIGN KEY (charRaceID) REFERENCES Race(RaceID) )\n;\n\n\n\nThe Class table is used to store different character classes that are available for players. The table consists of the following:\nClassID: a primary key that uniquely identifies each class available\nClassName: a varchar that names each class\nHitDie: an Int that is used as a die for HP calculation\nPrimaryStat: a VarChar that shows the main stat for each class\nDescription: a text field providing details about each class\n\nCREATE TABLE Class (\nClassID INT PRIMARY KEY,\nClassName VARCHAR(255),\nHitDie INT,\nPrimaryStat VARCHAR(255),\nDescription TEXT )\n;\n\n\n\nThe Race table consists of data about each character’s race. The table contains the following data:\nRaceID: The primary key that uniquely identifies each available race\nRaceName: A varchar that names each race\nBonusStat: a Varchar that shows the benefits of each race\nDescription: a Text field that contains contextual background information for each race.\n\nCREATE TABLE Race (\nRaceID INT PRIMARY KEY,\nRaceName VARCHAR(255),\nBonusStat VARCHAR(255),\nDescription TEXT\n\n);\n\n\n\nThe Spell table stores available spells and contains the following data:\nSpellID: A primary key that uniquely identifies each spell available\nName: a Varchar that contains the name of each spell\nLevel: An Int that shows the level of each spell\nSchool: a Varchar indicating which magical school the spell is part of\nEffect: a text field describing the capabilities of each spell\nCastingTime: a Varchar that contains the duration of casting time of each spell\nDuration: a Varchar that consists of how long the effects of the particular spell are expected to last\n\nCREATE TABLE Spell (\nSpellID INT PRIMARY KEY,\nName VARCHAR(255),\nLevel INT,\nSchool VARCHAR(255),\nEffect TEXT,\nCastingTime VARCHAR(255),\nDuration VARCHAR(255)\n\n);\n\n\n\nThe ClassSpell table stores the relationship between class and spell and contains the following data:\nClassID: An Int that stores what class the spell belongs to\nSpellID: uniquely identifies each spell.\n\nCREATE TABLE ClassSpell (\nClassID INT,\nSpellID INT,\nPRIMARY KEY (ClassID, SpellID),\nFOREIGN KEY (ClassID) REFERENCES Class(ClassID),\nFOREIGN KEY (SpellID) REFERENCES Spell(SpellID)\n\n);\n\n\n\nThe Monster table stores enemy data “monster” and contains the following:\nMonsterID: the primary key uniquely identifying each monster\nName: A varchar containing each monster’s name\nRaceID: the foreign key that points to Race.RaceID\nClassID: a foreign key which points to Class.classID\n**CR: a Float that contains difficulty level\nHP: an Int containing health\nAC: an Int showing armor class\nType: a Varchar describing class/type of monster\nXP: a varchar showing how much XP is given after defeating said monster.\n\nCREATE TABLE Monster (\nMonsterID INT PRIMARY KEY,\nName VARCHAR(255),\nRaceID INT,\nClassID INT,\nCR FLOAT,\nHP INT,\nAC INT,\nType VARCHAR(255),\nXP INT,\nFOREIGN KEY (RaceID) REFERENCES Race(RaceID),\nFOREIGN KEY (ClassID) REFERENCES Class(ClassID)\n);\n\n\n\nThe Boss contains data on different bosses encountered throughout the game.\nBossID: The primary key uniquely identifying each boss\nName: a Varchar that contains the name of each boss\nMonsterID: a foreign key pointing to Monster MonsterID\nPhaseCount: An Int showing the level of phases a boss has\nLair: A Varchar for the location of each boss.\n\nCREATE TABLE Boss (\nBossID INT PRIMARY KEY,\nName VARCHAR(255),\nMonsterID INT,\nPhaseCount INT,\nLair VARCHAR(255),\nFOREIGN KEY (MonsterID) REFERENCES Monster(MonsterID)\n);\n\n\n\nThe Equipment table contains all items that are attainable for players in the game. It contains the following data:\nEquipmentID: the primary key that uniquely identifies each item.\nName: a Varchar that contains the name of each item\nType: A varchar that contains the category of item\nBonus: A Varchar that contains bonus items\nRarity: A Varchar that displays the rarity of each item\nDescription: a Text field that explains what each item is and what it does\n\nCREATE TABLE Equipment (\nEquipmentID INT PRIMARY KEY,\nName VARCHAR(255),\nType VARCHAR(255),\nBonus VARCHAR(255),\nRarity VARCHAR(255),\nDescription TEXT )\n;\n\n\n\nThe CharacterEquipment table shows what equipment belongs to what character. It contains the following:\nCharactherID: a foreign key referencing Character.CharactherID\nEquipmentID: a foreign key referencing Characther.CharactherID\n\nCREATE TABLE CharacterEquipment ( CharacterID INT,\nEquipmentID INT,\nPRIMARY KEY (CharacterID, EquipmentID),\nFOREIGN KEY (CharacterID) REFERENCES Character(CharacterID),\nFOREIGN KEY (EquipmentID) REFERENCES Equipment(EquipmentID)\n);\n\n\n\nThe NPC table contains the non-playable characters present in the game. It contains the following data:\nNPCID: the primary key uniquely identifying each NPC\nName: a Varchar containing the name of each NPC\nRole: A Varchar displaying the role of each NPC such as guard, merchant etc.\nFaction: the “guild” each NPC belongs to\nLocation: The location of each NPC\n\nCREATE TABLE NPC (\nNPCID INT PRIMARY KEY,\nName VARCHAR(255),\nRole VARCHAR(255),\nFaction VARCHAR(255),\nLocation VARCHAR(255)\n);\n\n\n\nThe Event table tracks all events in the game. It contains the following data:\nEventID: The primary key uniquely identifying each event.\nName: a Varchar which names each event\nDate: a Date which shows when the event occurred\nDescription: A text field explaining the event that occurred.\n\nCREATE TABLE Event (\nEventID INT PRIMARY KEY,\nName VARCHAR(255),\nDate DATE,\nDescription TEXT\n);\n\n\n\nThe CharacterEvent table stores all events specific players have participated in. It contains the following:\nCharacterID: a foreign key referencing character.charactherID\nEventID: a foreign key referencing EventID\n\nCREATE TABLE CharacterEvent (\nCharacterID INT,\nEventID INT,\nPRIMARY KEY (CharacterID, EventID),\nFOREIGN KEY (CharacterID) REFERENCES Character(CharacterID),\nFOREIGN KEY (EventID) REFERENCES Event(EventID)\n);\n\n\n\nThe Achievement table stores all achievements players can accomplish throughout the game. It contains the following:\nAchievementID: The primary key uniquely identifying each achievement\nName: a Varchar that names each achievement\nDescription: A text field that describes how players can earn said achievement\nXPReward: An Int which shows the experience awarded for each achievement\n\nCREATE TABLE Achievement (\nAchievementID INT PRIMARY KEY,\nName VARCHAR(255),\nDescription TEXT,\nXPReward INT \n);\n\n\n\nThe PlayerAchievement table stores data referencing which player has been able to complete which achievement. It contains the following:\nPlayerID: A foreign key referencing Player.PlayerID\nAchievementID: A foreign key referencing Achievement.AchievementID\n\nCREATE TABLE PlayerAchievement ( PlayerID INT,\nAchievementID INT,\nPRIMARY KEY (PlayerID, AchievementID),\nFOREIGN KEY (PlayerID) REFERENCES Player(PlayerID),\nFOREIGN KEY (AchievementID) REFERENCES Achievement(AchievementID)\n);"
  },
  {
    "objectID": "Phase4.html#create-tables",
    "href": "Phase4.html#create-tables",
    "title": "COP-5725---Group-Project",
    "section": "",
    "text": "The Player table creates and stores the player. Each player can control a character that is identified via a name and username.\nThe table is linked to the Character table through the foreign key. The table consists of the following:\nPlayerID: and Int identifies each player and is the primary key\nName: A string consists of the full name of the player\nUserName: a string that contains the player’s username. All usernames must be unique\nCharacterID: An int that is also a foreign key which links to the character table\n\nCREATE TABLE Player ( PlayerID INT PRIMARY KEY,\nName VARCHAR(255),\nUserName VARCHAR(255),\nCharacterID INT,\nFOREIGN KEY (CharacterID) REFERENCES Character(CharacterID) );\n\n\n\n\nCREATE TABLE Character (\nCharacterID INT PRIMARY KEY,\nName VARCHAR(255),\nLevel INT,\nXP INT,\nHP INT,\nMana INT,\nAlignment VARCHAR(255),\ncharClassID INT,\ncharRaceID INT,\nFOREIGN KEY (charClassID) REFERENCES Class(ClassID),\nFOREIGN KEY (charRaceID) REFERENCES Race(RaceID) )\n;\n\n\n\nThe Class table is used to store different character classes that are available for players. The table consists of the following:\nClassID: a primary key that uniquely identifies each class available\nClassName: a varchar that names each class\nHitDie: an Int that is used as a die for HP calculation\nPrimaryStat: a VarChar that shows the main stat for each class\nDescription: a text field providing details about each class\n\nCREATE TABLE Class (\nClassID INT PRIMARY KEY,\nClassName VARCHAR(255),\nHitDie INT,\nPrimaryStat VARCHAR(255),\nDescription TEXT )\n;\n\n\n\nThe Race table consists of data about each character’s race. The table contains the following data:\nRaceID: The primary key that uniquely identifies each available race\nRaceName: A varchar that names each race\nBonusStat: a Varchar that shows the benefits of each race\nDescription: a Text field that contains contextual background information for each race.\n\nCREATE TABLE Race (\nRaceID INT PRIMARY KEY,\nRaceName VARCHAR(255),\nBonusStat VARCHAR(255),\nDescription TEXT\n\n);\n\n\n\nThe Spell table stores available spells and contains the following data:\nSpellID: A primary key that uniquely identifies each spell available\nName: a Varchar that contains the name of each spell\nLevel: An Int that shows the level of each spell\nSchool: a Varchar indicating which magical school the spell is part of\nEffect: a text field describing the capabilities of each spell\nCastingTime: a Varchar that contains the duration of casting time of each spell\nDuration: a Varchar that consists of how long the effects of the particular spell are expected to last\n\nCREATE TABLE Spell (\nSpellID INT PRIMARY KEY,\nName VARCHAR(255),\nLevel INT,\nSchool VARCHAR(255),\nEffect TEXT,\nCastingTime VARCHAR(255),\nDuration VARCHAR(255)\n\n);\n\n\n\nThe ClassSpell table stores the relationship between class and spell and contains the following data:\nClassID: An Int that stores what class the spell belongs to\nSpellID: uniquely identifies each spell.\n\nCREATE TABLE ClassSpell (\nClassID INT,\nSpellID INT,\nPRIMARY KEY (ClassID, SpellID),\nFOREIGN KEY (ClassID) REFERENCES Class(ClassID),\nFOREIGN KEY (SpellID) REFERENCES Spell(SpellID)\n\n);\n\n\n\nThe Monster table stores enemy data “monster” and contains the following:\nMonsterID: the primary key uniquely identifying each monster\nName: A varchar containing each monster’s name\nRaceID: the foreign key that points to Race.RaceID\nClassID: a foreign key which points to Class.classID\n**CR: a Float that contains difficulty level\nHP: an Int containing health\nAC: an Int showing armor class\nType: a Varchar describing class/type of monster\nXP: a varchar showing how much XP is given after defeating said monster.\n\nCREATE TABLE Monster (\nMonsterID INT PRIMARY KEY,\nName VARCHAR(255),\nRaceID INT,\nClassID INT,\nCR FLOAT,\nHP INT,\nAC INT,\nType VARCHAR(255),\nXP INT,\nFOREIGN KEY (RaceID) REFERENCES Race(RaceID),\nFOREIGN KEY (ClassID) REFERENCES Class(ClassID)\n);\n\n\n\nThe Boss contains data on different bosses encountered throughout the game.\nBossID: The primary key uniquely identifying each boss\nName: a Varchar that contains the name of each boss\nMonsterID: a foreign key pointing to Monster MonsterID\nPhaseCount: An Int showing the level of phases a boss has\nLair: A Varchar for the location of each boss.\n\nCREATE TABLE Boss (\nBossID INT PRIMARY KEY,\nName VARCHAR(255),\nMonsterID INT,\nPhaseCount INT,\nLair VARCHAR(255),\nFOREIGN KEY (MonsterID) REFERENCES Monster(MonsterID)\n);\n\n\n\nThe Equipment table contains all items that are attainable for players in the game. It contains the following data:\nEquipmentID: the primary key that uniquely identifies each item.\nName: a Varchar that contains the name of each item\nType: A varchar that contains the category of item\nBonus: A Varchar that contains bonus items\nRarity: A Varchar that displays the rarity of each item\nDescription: a Text field that explains what each item is and what it does\n\nCREATE TABLE Equipment (\nEquipmentID INT PRIMARY KEY,\nName VARCHAR(255),\nType VARCHAR(255),\nBonus VARCHAR(255),\nRarity VARCHAR(255),\nDescription TEXT )\n;\n\n\n\nThe CharacterEquipment table shows what equipment belongs to what character. It contains the following:\nCharactherID: a foreign key referencing Character.CharactherID\nEquipmentID: a foreign key referencing Characther.CharactherID\n\nCREATE TABLE CharacterEquipment ( CharacterID INT,\nEquipmentID INT,\nPRIMARY KEY (CharacterID, EquipmentID),\nFOREIGN KEY (CharacterID) REFERENCES Character(CharacterID),\nFOREIGN KEY (EquipmentID) REFERENCES Equipment(EquipmentID)\n);\n\n\n\nThe NPC table contains the non-playable characters present in the game. It contains the following data:\nNPCID: the primary key uniquely identifying each NPC\nName: a Varchar containing the name of each NPC\nRole: A Varchar displaying the role of each NPC such as guard, merchant etc.\nFaction: the “guild” each NPC belongs to\nLocation: The location of each NPC\n\nCREATE TABLE NPC (\nNPCID INT PRIMARY KEY,\nName VARCHAR(255),\nRole VARCHAR(255),\nFaction VARCHAR(255),\nLocation VARCHAR(255)\n);\n\n\n\nThe Event table tracks all events in the game. It contains the following data:\nEventID: The primary key uniquely identifying each event.\nName: a Varchar which names each event\nDate: a Date which shows when the event occurred\nDescription: A text field explaining the event that occurred.\n\nCREATE TABLE Event (\nEventID INT PRIMARY KEY,\nName VARCHAR(255),\nDate DATE,\nDescription TEXT\n);\n\n\n\nThe CharacterEvent table stores all events specific players have participated in. It contains the following:\nCharacterID: a foreign key referencing character.charactherID\nEventID: a foreign key referencing EventID\n\nCREATE TABLE CharacterEvent (\nCharacterID INT,\nEventID INT,\nPRIMARY KEY (CharacterID, EventID),\nFOREIGN KEY (CharacterID) REFERENCES Character(CharacterID),\nFOREIGN KEY (EventID) REFERENCES Event(EventID)\n);\n\n\n\nThe Achievement table stores all achievements players can accomplish throughout the game. It contains the following:\nAchievementID: The primary key uniquely identifying each achievement\nName: a Varchar that names each achievement\nDescription: A text field that describes how players can earn said achievement\nXPReward: An Int which shows the experience awarded for each achievement\n\nCREATE TABLE Achievement (\nAchievementID INT PRIMARY KEY,\nName VARCHAR(255),\nDescription TEXT,\nXPReward INT \n);\n\n\n\nThe PlayerAchievement table stores data referencing which player has been able to complete which achievement. It contains the following:\nPlayerID: A foreign key referencing Player.PlayerID\nAchievementID: A foreign key referencing Achievement.AchievementID\n\nCREATE TABLE PlayerAchievement ( PlayerID INT,\nAchievementID INT,\nPRIMARY KEY (PlayerID, AchievementID),\nFOREIGN KEY (PlayerID) REFERENCES Player(PlayerID),\nFOREIGN KEY (AchievementID) REFERENCES Achievement(AchievementID)\n);"
  },
  {
    "objectID": "Phase4.html#insert-sample-data",
    "href": "Phase4.html#insert-sample-data",
    "title": "COP-5725---Group-Project",
    "section": "Insert Sample Data",
    "text": "Insert Sample Data\nBelow are the initial dataset entries for key entities in the game database.\n\nRace Table\n    INSERT IGNORE INTO Race (RaceID) VALUES (301);\n    INSERT IGNORE INTO Race (RaceID) VALUES (303);\n    INSERT IGNORE INTO Race (RaceID) VALUES (304);\n    INSERT IGNORE INTO Race (RaceID) VALUES (305);\n\n\nClass Table\n    INSERT IGNORE INTO Class (ClassID) VALUES (201);\n    INSERT IGNORE INTO Class (ClassID) VALUES (202);\n    INSERT IGNORE INTO Class (ClassID) VALUES (203);\n    INSERT IGNORE INTO Class (ClassID) VALUES (204);\n\n\nPlayer Table\n    INSERT IGNORE INTO Player (PlayerID, Name) VALUES (101, 'Arin');\n    INSERT IGNORE INTO Player (PlayerID, Name) VALUES (102, 'Brenna');\n    INSERT IGNORE INTO Player (PlayerID, Name) VALUES (103, 'Cedric');\n    INSERT IGNORE INTO Player (PlayerID, Name) VALUES (104, 'Daria');\n    INSERT IGNORE INTO Player (PlayerID, Name) VALUES (105, 'Elandor');\n\n\nCharacter Table\n    INSERT IGNORE INTO Character (CharacterID, Name, Level) VALUES (501, 'worf', 10);\n    INSERT IGNORE INTO Character (CharacterID, Name, Level) VALUES (502, 'creeger', 12);\n    INSERT IGNORE INTO Character (CharacterID, Name, Level) VALUES (503, 'fendal', 15);\n    INSERT IGNORE INTO Character (CharacterID, Name, Level) VALUES (504, 'dar', 8);\n    INSERT IGNORE INTO Character (CharacterID, Name, Level) VALUES (505, 'edlor', 20);\n\n\nPlayerCharacter Table\n    INSERT IGNORE INTO PlayerCharacter (CharacterID, PlayerID) VALUES (501,  101);\n    INSERT IGNORE INTO PlayerCharacter (CharacterID, PlayerID) VALUES (502,  102);\n    INSERT IGNORE INTO PlayerCharacter (CharacterID, PlayerID) VALUES (503,  103);\n    INSERT IGNORE INTO PlayerCharacter (CharacterID, PlayerID) VALUES (504,  104);\n    INSERT IGNORE INTO PlayerCharacter (CharacterID, PlayerID) VALUES (505,  105);\n\n\nEquipment Table\n    INSERT IGNORE INTO Equipment (EquipmentID, Name, Type, Bonus, Rarity, Description, Equipped )\n    VALUES (894, 'Longsword of Valor', 'Weapon', '+2 ATK', 'Rare', 'A shining blade blessed by paladins.', TRUE);\n    INSERT IGNORE INTO Equipment (EquipmentID, Name, Type, Bonus, Rarity, Description, Equipped)\n    VALUES (847, 'Cloak of Shadows', 'Armor', '+1 STEALTH', 'Uncommon', 'Blends with the darkness.', TRUE);\n    INSERT IGNORE INTO Equipment (EquipmentID, Name, Type, Bonus, Rarity, Description, Equipped)\n    VALUES (857, 'Ring of Fire', 'Accessory', '+1 FIRE DMG', 'Rare', 'Grants control over flame.', TRUE);\n    INSERT IGNORE INTO Equipment (EquipmentID, Name, Type, Bonus, Rarity, Description, Equipped)\n    VALUES (820, 'Boots of Haste', 'Armor', '+10 SPEED', 'Rare', 'Doubles movement speed.', TRUE);\n    INSERT IGNORE INTO Equipment (EquipmentID, Name, Type, Bonus, Rarity, Description, Equipped)\n    VALUES (869, 'Amulet of Vitality', 'Accessory', '+15 HP', 'Epic', 'Boosts health significantly.', TRUE);\n\n\nCharacterEquipment Table\n    INSERT IGNORE INTO CharacterEquipment (CharacterID, EquipmentID) VALUES (501, 894);\n    INSERT IGNORE INTO CharacterEquipment (CharacterID, EquipmentID) VALUES (502, 847);\n    INSERT IGNORE INTO CharacterEquipment (CharacterID, EquipmentID) VALUES (503, 857);\n    INSERT IGNORE INTO CharacterEquipment (CharacterID, EquipmentID) VALUES (504, 820);\n    INSERT IGNORE INTO CharacterEquipment (CharacterID, EquipmentID) VALUES (505, 869);\n\n\nMonster Table\n    INSERT IGNORE INTO Monster (MonsterID, Name, RaceID, ClassID, CR, HP, AC, Type, XP)\n    VALUES (647, 'Goblin Brute', 303, 201, 0.25, 22, 15, 'Beast', 100);\n    INSERT IGNORE INTO Monster (MonsterID, Name, RaceID, ClassID, CR, HP, AC, Type, XP)\n    VALUES (650, 'Fire Imp', 304, 202, 0.5, 18, 13, 'Fiend', 150);\n    INSERT IGNORE INTO Monster (MonsterID, Name, RaceID, ClassID, CR, HP, AC, Type, XP)\n    VALUES (626, 'Skeleton Archer', 303, 203, 0.75, 30, 12, 'Undead', 200);\n    INSERT IGNORE INTO Monster (MonsterID, Name, RaceID, ClassID, CR, HP, AC, Type, XP)\n    VALUES (635, 'Bandit Captain', 301, 201, 1.5, 60, 16, 'Humanoid', 450);\n    INSERT IGNORE INTO Monster (MonsterID, Name, RaceID, ClassID, CR, HP, AC, Type, XP)\n    VALUES (637, 'Dark Druid', 305, 204, 2.0, 75, 14, 'Caster', 600);\n\n\nBoss Table\n    INSERT IGNORE INTO Boss (BossID, Name, MonsterID, PhaseCount, Lair)\n    VALUES (751, 'Goroth the Devourer', 637, 3, 'Ashen Caverns');\n    INSERT IGNORE INTO Boss (BossID, Name, MonsterID, PhaseCount, Lair)\n    VALUES (733, 'Zeriel the Flameborn', 650, 2, 'Crimson Tower');\n    INSERT IGNORE INTO Boss (BossID, Name, MonsterID, PhaseCount, Lair)\n    VALUES (735, 'Thornshade', 626, 1, 'Whispering Woods');\n    INSERT IGNORE INTO Boss (BossID, Name, MonsterID, PhaseCount, Lair)\n    VALUES (746, 'Valkor Doomhammer', 647, 2, 'Broken Citadel');\n    INSERT IGNORE INTO Boss (BossID, Name, MonsterID, PhaseCount, Lair)\n    VALUES (729, 'Morwenna the Hollow', 635, 4, 'Eclipsed Sanctum');\n\n\nNPC Table\n    INSERT IGNORE INTO NPC (NPCID, Name, Role, Faction, Location)\n    VALUES (904, 'Marcus Ironshield', 'Blacksmith', 'Steelguard', 'Forge Town');\n    INSERT IGNORE INTO NPC (NPCID, Name, Role, Faction, Location)\n    VALUES (993, 'Selene Moonwhisper', 'Merchant', 'Silver Circle', 'Elaria Market');\n    INSERT IGNORE INTO NPC (NPCID, Name, Role, Faction, Location)\n    VALUES (987, 'Thaddeus Grin', 'Guard', 'Crimson Watch', 'North Gate');\n    INSERT IGNORE INTO NPC (NPCID, Name, Role, Faction, Location)\n    VALUES (964, 'Lira Sunpetal', 'Healer', 'Verdant Grove', 'Sacred Glade');\n    INSERT IGNORE INTO NPC (NPCID, Name, Role, Faction, Location)\n    VALUES (984, 'Drogath Stonefist', 'Trainer', 'Stoneclaw Clan', 'Battle Arena');\n\n\nEvent Table\n    INSERT IGNORE INTO Event (EventID, Name, Date, Description, Type)\n    VALUES (1063, 'Battle of Emberfall', '2024-05-12', 'The city was nearly razed by flame elementals.', 'Battle');\n    INSERT IGNORE INTO Event (EventID, Name, Date, Description, Type)\n    VALUES (1090, 'Siege of Thornkeep', '2024-06-23', 'A brutal 3-day battle against undead forces.', 'Battle');\n    INSERT IGNORE INTO Event (EventID, Name, Date, Description, Type)\n    VALUES (1057, 'Festival of Light', '2024-07-15', 'Celebration of the gods’ blessings.', 'Festival');\n    INSERT IGNORE INTO Event (EventID, Name, Date, Description, Type)\n    VALUES (1087, 'Rogue Uprising', '2024-08-02', 'Thieves guild attacked the capital.', 'Quest');\n    INSERT IGNORE INTO Event (EventID, Name, Date, Description, Type)\n    VALUES (1004, 'Mystic Eclipse', '2024-09-30', 'A magical event altering mana flows.', 'Quest');\n\n\nCharacterEvent Table\n    INSERT IGNORE INTO CharacterEvent (CharacterID, EventID) VALUES (501, 1063);\n    INSERT IGNORE INTO CharacterEvent (CharacterID, EventID) VALUES (502, 1090);\n    INSERT IGNORE INTO CharacterEvent (CharacterID, EventID) VALUES (503, 1057);\n    INSERT IGNORE INTO CharacterEvent (CharacterID, EventID) VALUES (504, 1087);\n    INSERT IGNORE INTO CharacterEvent (CharacterID, EventID) VALUES (505, 1004);\n\n\nAchievement Table\n    INSERT IGNORE INTO Achievement (AchievementID, Name, Description, XPReward)\n    VALUES (1130, 'First Blood', 'Defeat your first enemy.', 100);\n    INSERT IGNORE INTO Achievement (AchievementID, Name, Description, XPReward)\n    VALUES (1143, 'Explorer', 'Visit 10 unique locations.', 250);\n    INSERT IGNORE INTO Achievement (AchievementID, Name, Description, XPReward)\n    VALUES (1193, 'Elite Slayer', 'Defeat an elite monster.', 500);\n    INSERT IGNORE INTO Achievement (AchievementID, Name, Description, XPReward)\n    VALUES (1160, 'Master of Magic', 'Learn 10 spells.', 400);\n    INSERT IGNORE INTO Achievement (AchievementID, Name, Description, XPReward)\n    VALUES (1116, 'Hero of the Realm', 'Complete the main questline.', 1000);\n\n\nPlayerAchievement Table\n    INSERT IGNORE INTO PlayerAchievement (PlayerID, AchievementID) VALUES (101, 1130);\n    INSERT IGNORE INTO PlayerAchievement (PlayerID, AchievementID) VALUES (102, 1143);\n    INSERT IGNORE INTO PlayerAchievement (PlayerID, AchievementID) VALUES (103, 1193);\n    INSERT IGNORE INTO PlayerAchievement (PlayerID, AchievementID) VALUES (104, 1160);\n    INSERT IGNORE INTO PlayerAchievement (PlayerID, AchievementID) VALUES (105, 1116);\n\n\nCharacterEvent Table\n    INSERT IGNORE INTO CharacterEvent (CharacterID, EventID, Result) VALUES (501, 1063, 'Won');\n    INSERT IGNORE INTO CharacterEvent (CharacterID, EventID, Result) VALUES (502, 1063, 'Won');\n    INSERT IGNORE INTO CharacterEvent (CharacterID, EventID, Result) VALUES (503, 1063, 'Lost');\n    INSERT IGNORE INTO CharacterEvent (CharacterID, EventID, Result) VALUES (504, 1063, 'Lost');\n    INSERT IGNORE INTO CharacterEvent (CharacterID, EventID, Result) VALUES (505, 1063, 'Lost');\n### Spell Table\n    INSERT INTO Spell (SpellID, Name, Level, School, Effect, CastingTime, Duration) VALUES\n    (401, 'Fireball', 3, 'Evocation', 'Deals fire damage in a 20-foot radius.', '1 action', 'Instantaneous'),\n    (402, 'Cure Wounds', 1, 'Evocation', 'Heals a target creature.', '1 action', 'Instantaneous'),\n    (403, 'Mage Armor', 1, 'Abjuration', 'Gives +3 AC to a creature without armor.', '1 action', '8 hours'),\n    (404, 'Invisibility', 2, 'Illusion', 'Makes a creature invisible.', '1 action', 'Up to 1 hour'),\n    (405, 'Shield', 1, 'Abjuration', 'Gives +5 AC until start of your next turn.', '1 reaction', '1 round');\n    \"\"\",\n\n\nClassSpell\n    INSERT INTO ClassSpell (ClassID, SpellID) VALUES\n    (201, 401),  \n    (202, 402),  \n    (201, 403),  \n    (203, 404),  \n    (204, 405);"
  },
  {
    "objectID": "Phase4.html#write-execute-complex-queries",
    "href": "Phase4.html#write-execute-complex-queries",
    "title": "COP-5725---Group-Project",
    "section": "Write & Execute Complex Queries",
    "text": "Write & Execute Complex Queries\n\nLists all Characters with their class, race, and equiment\nThe DM (Dungeon Master) managing a digital D&D campaign management system. has characters with equipment that can be equipped or unequipped.\nYou want to display each character’s currently equipped gear on a dashboard or character sheet.\n    SELECT \n        c.Name AS CharacterName,\n        e.Name AS EquipmentName,\n        e.Type,\n        e.Bonus,\n        e.Rarity\n    FROM \n        `Character` c\n    JOIN \n        CharacterEquipment ce ON c.CharacterID = ce.CharacterID\n    JOIN \n        Equipment e ON ce.EquipmentID = e.EquipmentID\n    WHERE \n        e.Equipped = TRUE\n    ORDER BY c.Name;\n\n\n\nCharacterName\nEquipmentName\nType\nBonus\nRarity\n\n\n\n\nworf\nLongsword of Valor\nWeapon\n+2 ATK\nRare\n\n\ncreeger\nCloak of Shadows\nArmor\n+1 STEALTH\nUncommon\n\n\nfendal\nRing of Fire\nAccessory\n+1 FIRE DMG\nRare\n\n\ndar\nBoots of Haste\nArmor\n+10 SPEED\nRare\n\n\nedlor\nAmulet of Vitality\nAccessory\n+15 HP\nEpic\n\n\n\n\n\nFinds all spells available to a character\nDM (Dungeon Master) creates a reference tool or in-game spellbook UI that shows what spells each class has access to, sorted by class name and spell level.\n   SELECT \n       s.Name AS SpellName,\n       s.Level,\n       s.School,\n       s.CastingTime,\n       s.Duration\n   FROM \n       ClassSpell cs\n   JOIN \n       Class cl ON cs.ClassID = cl.ClassID\n   JOIN \n       Spell s ON cs.SpellID = s.SpellID\n   ORDER BY \n       cl.ClassName, s.Level;\n\n\n\n\n\n\n\n\n\n\nSpellName\nLevel\nSchool\nCastingTime\nDuration\n\n\n\n\nMage Armor\n1\nAbjuration\n1 action\n8 hours\n\n\nCure Wounds 1\nEvocation\n1 action\nInstantaneous\n\n\n\nShield\n1\nAbjuration\n1 reaction\n1 round\n\n\nInvisibility\n2\nIllusion\n1 action\nUp to 1 hour\n\n\nFireball\n3\nEvocation\n1 action\nInstantaneous\n\n\n\n\n\nLists all players and what events they have participated in.\nWhile building a campaign tracking tool for a Dungeons & Dragons groupand managing a player activity log in a digital RPG platform.\nWe track every event that each player’s character has participated in, and present this as a logbook or activity timeline, sorted by player and most recent events.\n    SELECT\n        p.UserName,\n        c.Name AS CharacterName,\n         e.Name AS EventName,\n        e.Date AS EventDate\n    FROM Player p\n    JOIN PlayerCharacter pc ON p.PlayerID = pc.PlayerID\n    JOIN Character c ON pc.CharacterID = c.CharacterID\n    JOIN CharacterEvent ce ON c.CharacterID = ce.CharacterID\n    JOIN Event e ON ce.EventID = e.EventID\n    ORDER BY p.UserName, e.Date DESC;\n\n\n\nPlayerName\nEventName\nEventDate\n\n\n\n\nArin\nBattle of Emberfall\n2024-05-12\n\n\nBrenna\nSiege of Thornkeep\n2024-06-23\n\n\nCedric\nFestival of Light\n2024-07-15\n\n\nDaria\nRogue Uprising\n2024-08-02\n\n\nElandor\nMystic Eclipse\n2024-09-30\n\n\n\n\n\nAverage level of XP per class\nAs the game designer and building a player analytics dashboard. We want to evaluate how players are progressing with different character classes over time.\n    SELECT\n        cl.ClassName,\n        AVG(c.Level) AS AvgLevel,\n        SUM(c.XP) AS TotalXP\n    FROM Character c\n    JOIN Class cl ON c.charClassID = cl.ClassID\n    GROUP BY cl.ClassName\n    ORDER BY AvgLevel DESC;\n\n\n\nClassName\nAvgLevel\nTotalXP\n\n\n\n\nMage\n18.5\n12500\n\n\nFighter\n12.0\n7200\n\n\nRogue\n7.5\n3900\n\n\n\n\n\nwon battles by character\nAs we run this competitive D&D-style campaign we want to manage a digital RPG platform where characters participate in events. We want to track and reward characters who win battles the most.\n    SELECT\n        c.Name AS CharacterName,\n        COUNT(DISTINCT e.EventID) AS BattlesWon\n    FROM Character c\n    JOIN CharacterEvent ce ON c.CharacterID = ce.CharacterID\n    JOIN Event e ON ce.EventID = e.EventID\n    WHERE e.Type = 'Battle'\n    AND e.Result = 'Won'\n    GROUP BY c.Name\n    ORDER BY BattlesWon DESC;\n\n\n\nCharacterName\nEventName\nEventDate\n\n\n\n\nworf\nBattle of Emberfall\n2024-05-12\n\n\ncreeger\nBattle of Emberfall\n2024-05-12"
  },
  {
    "objectID": "Phase4.html#show-reverse-engineered-diagram",
    "href": "Phase4.html#show-reverse-engineered-diagram",
    "title": "COP-5725---Group-Project",
    "section": "Show Reverse-Engineered Diagram",
    "text": "Show Reverse-Engineered Diagram\n\n\n\nReverse Engineering Diagram From Python"
  },
  {
    "objectID": "queriesSQL.html",
    "href": "queriesSQL.html",
    "title": "COP-5725---Group-Project",
    "section": "",
    "text": "Query: Get the highest-level characters for each class.\n\nSELECT c.Name AS CharacterName, cl.ClassName, MAX(ch.Level) AS HighestLevel\nFROM Character ch\nJOIN Class cl ON ch.charClassID = cl.ClassID\nGROUP BY cl.ClassName\nORDER BY cl.ClassName;\n\nQuery: Get the most commonly equipped item across all characters.\n\nSELECT e.Name AS ItemName, COUNT(ce.EquipmentID) AS EquipCount\nFROM Equipment e\nJOIN CharacterEquipment ce ON e.EquipmentID = ce.EquipmentID\nGROUP BY e.Name\nORDER BY EquipCount DESC\nLIMIT 1;\n\nQuery: Get the total XP gained by players who participated in a specific event.\n\nSELECT p.Name AS PlayerName, SUM(e.XP) AS TotalXP\nFROM Player p\nJOIN CharacterEvent ce ON p.PlayerID = ce.PlayerID\nJOIN Event ev ON ce.EventID = ev.EventID\nJOIN Character c ON p.PlayerID = c.PlayerID\nGROUP BY p.Name\nHAVING ev.EventID = 1\nORDER BY TotalXP DESC;\n\nQuery: Get the list of NPCs that belong to a specific faction and their location.\n\nSELECT Name AS NPCName, Location\nFROM NPC\nWHERE Faction = ‘Thieves Guild’\nORDER BY Location;\n\nQuery: Find the top 3 players who have earned the most achievements, along with their total XP reward.\n\nSELECT p.Name AS PlayerName, COUNT(pa.AchievementID) AS AchievementsEarned, SUM(a.XPReward) AS TotalXPReward\nFROM Player p\nJOIN PlayerAchievement pa ON p.PlayerID = pa.PlayerID\nJOIN Achievement a ON pa.AchievementID = a.AchievementID\nGROUP BY p.Name\nORDER BY AchievementsEarned DESC, TotalXPReward DESC\nLIMIT 3;"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "COP-5725—Group-Project",
    "section": "",
    "text": "Adventures within the Database Dungeon"
  },
  {
    "objectID": "index.html#player-strong-entity",
    "href": "index.html#player-strong-entity",
    "title": "COP-5725—Group-Project",
    "section": "3.1 👥 Player (Strong Entity)",
    "text": "3.1 👥 Player (Strong Entity)\n\n\n\nField\nType\nDescription\n\n\n\n\nPlayerID\nINT (PK)\nUnique player ID\n\n\nName\nVARCHAR\nPlayer’s full name\n\n\nUserName\nVARCHAR\nLogin or nickname\n\n\n\nAssociations:\n\nPlayerCharacter (Associative):\n\nPlayerID (FK)\nCharacterID (FK)\n\nPlayerAchievement (Associative):\n\nPlayerID (FK)\nAchievementID (FK)"
  },
  {
    "objectID": "index.html#character-strong-entity",
    "href": "index.html#character-strong-entity",
    "title": "COP-5725—Group-Project",
    "section": "3.2 📌 Character (Strong Entity)",
    "text": "3.2 📌 Character (Strong Entity)\n\n\n\nField\nType\nDescription\n\n\n\n\nCharacterID\nINT (PK)\nUnique character ID\n\n\nName\nVARCHAR\nCharacter name\n\n\nLevel\nINT\nCharacter level\n\n\ncharClassID\nINT (FK)\nLinks to Class\n\n\nXP\nINT\nExperience points\n\n\ncharRaceID\nINT (FK)\nLinks to Race\n\n\nHP\nINT\nCurrent hit points\n\n\nMana\nINT\nMana or spell slots\n\n\nAlignment\nVARCHAR\nAlignment (e.g., LG, CE)\n\n\n\nAssociations:\n\nBelongs to one Class and one Race\nEquips many Equipment via CHARACTER_EQUIPMENT\nParticipates in many Events via CHARACTER_EVENT\nFights many Monsters"
  },
  {
    "objectID": "index.html#race-strong-entity",
    "href": "index.html#race-strong-entity",
    "title": "COP-5725—Group-Project",
    "section": "3.3 🧙 Race (Strong Entity)",
    "text": "3.3 🧙 Race (Strong Entity)\n\n\n\nField\nType\nDescription\n\n\n\n\nRaceID\nINT (PK)\nUnique race ID\n\n\nRaceName\nVARCHAR\ne.g., Human, Elf\n\n\nbonusStat\nVARCHAR\nStat bonus (e.g., STR)\n\n\nDescription\nTEXT\nRace description"
  },
  {
    "objectID": "index.html#class-strong-entity",
    "href": "index.html#class-strong-entity",
    "title": "COP-5725—Group-Project",
    "section": "3.4 🧙 Class (Strong Entity)",
    "text": "3.4 🧙 Class (Strong Entity)\n\n\n\nField\nType\nDescription\n\n\n\n\nClassID\nINT (PK)\nUnique class ID\n\n\nClassName\nVARCHAR\nWizard, Fighter, etc.\n\n\nHitDie\nINT\nHit die (6, 8, 10)\n\n\nPrimaryStat\nVARCHAR\nINT, STR, etc.\n\n\nDescription\nTEXT\nClass description\n\n\n\nAssociations:\n\nHas many Spells via CLASS_SPELL\nReferenced by Character and Monster"
  },
  {
    "objectID": "index.html#spell-strong-entity",
    "href": "index.html#spell-strong-entity",
    "title": "COP-5725—Group-Project",
    "section": "3.5 ✨ Spell (Strong Entity)",
    "text": "3.5 ✨ Spell (Strong Entity)\n\n\n\nField\nType\nDescription\n\n\n\n\nSpellID\nINT (PK)\nUnique spell ID\n\n\nName\nVARCHAR\nSpell name\n\n\nLevel\nINT\nSpell level (0–9)\n\n\nSchool\nVARCHAR\nMagic school\n\n\nEffect\nTEXT\nDescription of the effect\n\n\nCastingTime\nVARCHAR\nAction, Bonus, etc.\n\n\nDuration\nVARCHAR\nInstant, 1 hour, etc.\n\n\n\nAssociations:\n\nLinked through ClassSpell: ClassID, SpellID"
  },
  {
    "objectID": "index.html#monster-weak-entity",
    "href": "index.html#monster-weak-entity",
    "title": "COP-5725—Group-Project",
    "section": "3.6 🧟 Monster (Weak Entity)",
    "text": "3.6 🧟 Monster (Weak Entity)\n\n\n\nField\nType\nDescription\n\n\n\n\nMonsterID\nINT (PK)\nUnique monster ID\n\n\nName\nVARCHAR\nCreature name\n\n\nraceID\nINT (FK)\nRace reference\n\n\nclassID\nINT (FK)\nClass reference\n\n\nCR\nFLOAT\nChallenge rating\n\n\nHP\nINT\nHit points\n\n\nAC\nINT\nArmor class\n\n\nType\nVARCHAR\nCreature type\n\n\nXP\nINT\nXP given when defeated\n\n\nMonsterID\nINT (PK, FK)\nAlso NPCID"
  },
  {
    "objectID": "index.html#boss-subtype-of-monster",
    "href": "index.html#boss-subtype-of-monster",
    "title": "COP-5725—Group-Project",
    "section": "3.7 👑 Boss (Subtype of Monster)",
    "text": "3.7 👑 Boss (Subtype of Monster)\n\n\n\nField\nType\nDescription\n\n\n\n\nBossID\nINT (PK)\nUnique boss ID\n\n\nName\nVARCHAR\nBoss name\n\n\nMonsterID\nINT (FK)\nInherits from Monster\n\n\nPhaseCount\nINT\nPhases in the fight\n\n\nLair\nVARCHAR\nLocation of boss fight"
  },
  {
    "objectID": "index.html#equipment-strong-entity",
    "href": "index.html#equipment-strong-entity",
    "title": "COP-5725—Group-Project",
    "section": "3.8 🗡️ Equipment (Strong Entity)",
    "text": "3.8 🗡️ Equipment (Strong Entity)\n\n\n\nField\nType\nDescription\n\n\n\n\nEquipmentID\nINT (PK)\nUnique ID\n\n\nName\nVARCHAR\nItem name\n\n\nType\nVARCHAR\nWeapon, Armor, etc.\n\n\nQuantity\nINT\nStackable count\n\n\nEquiped\nBOOL\nWhether equipped\n\n\nBonus\nVARCHAR\nStat bonus (e.g. +1 STR)\n\n\nRarity\nVARCHAR\nCommon, Rare, etc.\n\n\nDescription\nTEXT\nFlavor or effect text\n\n\n\nAssociations:\n\nEquipped via CharacterEquipment: CharacterID, EquipmentID"
  },
  {
    "objectID": "index.html#npc-strong-entity",
    "href": "index.html#npc-strong-entity",
    "title": "COP-5725—Group-Project",
    "section": "3.9 👥 NPC (Strong Entity)",
    "text": "3.9 👥 NPC (Strong Entity)\n\n\n\nField\nType\nDescription\n\n\n\n\nNPCID\nINT (PK)\nUnique NPC ID\n\n\nName\nVARCHAR\nCharacter name\n\n\nRole\nVARCHAR\nVendor, Questgiver, etc.\n\n\nclassID\nINT (FK)\nLinks to Class\n\n\nraceID\nINT (FK)\nLinks to Race\n\n\nFactionID\nINT (FK)\nBelongs to Faction\n\n\n\nAssociations: - Located in multiple locations via NPC_LOCATION - Can participate in EVENT - Has Class and Race (foreign keys)"
  },
  {
    "objectID": "index.html#faction-strong-entity",
    "href": "index.html#faction-strong-entity",
    "title": "COP-5725—Group-Project",
    "section": "3.10 🛡️ Faction (Strong Entity)",
    "text": "3.10 🛡️ Faction (Strong Entity)\n\n\n\nField\nType\nDescription\n\n\n\n\nFactionID\nINT (PK)\nUnique faction ID\n\n\nName\nVARCHAR\nFaction name\n\n\nPurpose\nTEXT\nLore or goal\n\n\nAlignment\nVARCHAR\ne.g., Neutral Evil"
  },
  {
    "objectID": "index.html#event-strong-entity",
    "href": "index.html#event-strong-entity",
    "title": "COP-5725—Group-Project",
    "section": "3.11 🎭 Event (Strong Entity)",
    "text": "3.11 🎭 Event (Strong Entity)\n\n\n\nField\nType\nDescription\n\n\n\n\nEventID\nINT (PK)\nUnique event ID\n\n\nName\nVARCHAR\nEvent title\n\n\nDate\nDATE\nDate of event\n\n\nDescription\nTEXT\nWhat occurred\n\n\n\nAssociations:\n\nInvolves characters through CHARACTER_EVENT\nNPCs may also participate"
  },
  {
    "objectID": "index.html#npc_location-weakassociative-entity",
    "href": "index.html#npc_location-weakassociative-entity",
    "title": "COP-5725—Group-Project",
    "section": "3.12 🌍 NPC_LOCATION (Weak/Associative Entity)",
    "text": "3.12 🌍 NPC_LOCATION (Weak/Associative Entity)\n\n\n\nField\nType\nDescription\n\n\n\n\nNPCLocID\nINT (PK)\nUnique ID\n\n\nNPCID\nINT (FK)\nLinked NPC\n\n\nLocation\nVARCHAR\nLocation name\n\n\nIsCurrent\nBOOL\nIs NPC currently there?"
  },
  {
    "objectID": "index.html#achievement-strong-entity",
    "href": "index.html#achievement-strong-entity",
    "title": "COP-5725—Group-Project",
    "section": "3.13 🏆 Achievement (Strong Entity)",
    "text": "3.13 🏆 Achievement (Strong Entity)\n\n\n\nField\nType\nDescription\n\n\n\n\nAchievementID\nINT (PK)\nUnique achievement ID\n\n\nName\nVARCHAR\nAchievement title\n\n\nDescription\nTEXT\nHow it was earned\n\n\nXPReward\nINT\nXP granted if any\n\n\n\nAssociations:\n\nEarned by players via PLAYER_ACHIEVEMENT ## Entity Relationship Diagram\n\n\n3.13.1 Players and Characters\n\n\n\n\n\n%%{init: {\"er\": {\"layoutDirection\": \"TB\"}, \"themeVariables\": {\"fontSize\": \"16px\"}}}%%\nerDiagram\n    PLAYER ||--o{ PLAYER_CHARACTER : \"Has Character\"\n    CHARACTER ||--|| PLAYER_CHARACTER : \"Belongs to\"\n    CHARACTER ||--|| CLASS : \"Belongs to\"\n    CHARACTER ||--|| RACE : \"Belongs to\"\n    PLAYER ||--o{ PLAYER_Achievement : \"Earns\"\n    PLAYER_Achievement ||--o{ ACHIEVEMENT : \"Achievement\"\n\n\n\n\n\n\n\n\n3.13.2 Characters and Equipment\n\n\n\n\n\n%%{init: {\"er\": {\"layoutDirection\": \"TB\"}, \"themeVariables\": {\"fontSize\": \"16px\"}}}%%\nerDiagram\n    CHARACTER ||--o{ CHARACTER_EQUIPMENT : \"Equips\"\n    EQUIPMENT ||--o{ CHARACTER_EQUIPMENT : \"Equipped by\"\n\n\n\n\n\n\n\n\n3.13.3 NPCs and World\n\n\n\n\n\n%%{init: {\"er\": {\"layoutDirection\": \"TB\"}, \"themeVariables\": {\"fontSize\": \"16px\"}}}%%\nerDiagram\n    NPC ||--|{ NPC_Faction : \"Belongs to\"\n    NPC ||--o{ NPC_LOCATION : \"Located in\"\n    NPC ||--|| Class : \"Has Class\"\n    NPC ||--|| Race : \"Is Race\"\n    MONSTER ||--|{ NPC : \"Is Monster\"\n    BOSS ||--|{ MONSTER : \"Is Boss\"\n\n\n\n\n\n\n\n\n3.13.4 Spells and Combat Events\n\n\n\n\n\n%%{init: {\"er\": {\"layoutDirection\": \"TB\"}, \"themeVariables\": {\"fontSize\": \"16px\"}}}%%\nerDiagram\n    CLASS_SPELL ||--o{ SPELL : \"Teaches\"\n    CLASS ||--o{ CLASS_SPELL : \"Has Spells\"\n    CHARACTER ||--o{ MONSTER : \"Fights\"\n    CHARACTER ||--o{ CHARACTER_EVENT : \"Participates in\"\n    EVENT ||--o{ CHARACTER_EVENT : \"Involves\"\n    NPC }o--o{ EVENT : \"Can participate\""
  },
  {
    "objectID": "index.html#specification-of-the-monster-entity",
    "href": "index.html#specification-of-the-monster-entity",
    "title": "COP-5725—Group-Project",
    "section": "4.1 Specification of the Monster Entity",
    "text": "4.1 Specification of the Monster Entity\nThis database stores and manages our ecology, encounters, and progression systems within our Dungeons & Dragons inspired role-playing game. It includes 12 major entities central to gameplay mechanics. One of these entities is the MONSTER entity, which represents creatures that characters can battle during their adventures.\n\n4.1.1 Entity Relationships\nThe MONSTER entity is related to the NPC, CLASS, and RACE entities.\n\nSince every monster is also an NPC, the MONSTER entity is modeled as a subtype of the NPC entity (supertype). This captures the idea that monsters share all attributes of NPCs, such as name and faction, but also have unique characteristics relevant to combat.\nEach monster can optionally be associated with a combat class (e.g., Berserker, Spellcaster), making it related to the CLASS entity.\nMonsters may also have a racial origin (e.g., Dragon, Undead), requiring a relationship with the RACE entity.\n\n\n\n4.1.2 Monster Entity Attributes\n\n\n\n\n\n\n\n\nAttribute\nType\nDescription\n\n\n\n\nMonsterID\nINT (PK, FK)\nUnique identifier; also acts as foreign key to NPC\n\n\nName\nVARCHAR\nName/type of the monster (e.g., \"Frost Troll\")\n\n\nCR\nFLOAT\nChallenge Rating; used for encounter balancing\n\n\nHP\nINT\nHit Points; how much damage the monster can take\n\n\nAC\nINT\nArmor Class; how hard it is to hit the monster\n\n\nType\nVARCHAR\nCategory such as Beast, Fiend, Dragon, etc.\n\n\nXP\nINT\nExperience points granted when defeated\n\n\nRaceID\nINT (FK)\nForeign key linking to RACE\n\n\nClassID\nINT (FK)\nForeign key linking to CLASS (optional)\n\n\n\n\n\n4.1.3 Relationships Summary\n\nOne-to-One (Mandatory) with NPC: Every monster must also be an NPC.\nMany-to-One (Optional) with CLASS: Many monsters may share a combat role.\nMany-to-One (Optional) with RACE: Many monsters may share a racial type.\n\n\n\n4.1.4 Specialization: Bosses\nThe MONSTER entity is further specialized by the BOSS entity. Some monsters are elevated to boss status, making them tougher and more unique. These creatures often serve as major enemies or final challenges within campaigns.\n\nThe BOSS entity is modeled as a subtype of the MONSTER entity, representing this additional level of specialization.\nAll bosses are monsters, but not all monsters are bosses.\n\nThis structure supports a rich and extensible combat ecosystem, allowing monsters to be categorized and extended according to gameplay needs, while maintaining strong data integrity and consistency."
  },
  {
    "objectID": "index.html#relationships-structure-analysis",
    "href": "index.html#relationships-structure-analysis",
    "title": "COP-5725—Group-Project",
    "section": "4.2 Relationships & Structure Analysis",
    "text": "4.2 Relationships & Structure Analysis\nList all relationships along with their cardinalities (e.g., one-to-many, many-to-many) and participation ratios (total vs. partial participation).\n\n4.2.1 Cardinality Table\n\n\n\n\n\n\n\n\nEntity\nCardinality\nDescription\n\n\n\n\nPLAYER and PLAYER_CHARACTER\nOne to Many (1:N)\nOne player plays many characters\n\n\nPLAYER and PLAYER_Achievement\nOne to Many (1:N)\nOne player earns many player_achievements\n\n\nPLAYER_Achievement ACHIEVEMENT\nOne to Many (1:N)\nOne player’s achievements are\n\n\nPLAYER_Character and CHARACTER\nOne to One (1:1)\nOne PLAYER_CHARACTER belongs to one character instance\n\n\nCHARACTER and CLASS\nOne to One (1:1)\nOne CHARACTER belongs to exactly one CLASS\n\n\nCHARACTER and RACE\nOne to One (1:1)\nOne CHARACTER belongs to exactly one RACE\n\n\nCHARACTER and EQUIPMENT\nOne to Many (1:N)\nOne CHARACTER equips one or more EQUIPMENTs\n\n\nBOSS and MONSTER\nOne to Many (1:N)\nOne BOSS supervises many MONSTERs\n\n\nMONSTER and NPC\nOne to Many (1:N)\nOne MONSTER relates to many NPCs\n\n\nNPC and NPC_Faction\nOne to Many (1:N)\nOne NPC belongs to many factions\n\n\nNPC and NPC_Location\nOne to Many (1:N)\nOne NPC is located in one or more locations\n\n\nNPC and CLASS\nOne to One (1:1)\nOne NPC has belongs to one class\n\n\nNPC and RACE\nOne to One (1:1)\nOne NPC belongs to one race\n\n\nCLASS and CLASS_SPELL\nOne to Many (1:N)\nOne Class has many spells\n\n\nCLASS_SPELL and SPELL\nOne to Many (1:N)\nOne Class Spell teaches many spells\n\n\nCHARACTER and MONSTER\nOne to Many (1:N)\nOne Character fights many Monsters\n\n\nCHARACTER and CHARACTER_EVENT\nOne to Many (1:N)\nOne Character participates in many Character Events\n\n\nEVENT and NPC\nMany to Many (N:N)\nMany NPCs participate in many Events\n\n\n\n\n\n4.2.2 Participation Ratio Table\n\n\n\n\n\n\n\n\nEntity\nParticipation\nDescription\n\n\n\n\nPlayer and Character\nTotal/Mandatory (1)\nA character must be played by a player\n\n\n\nPartial/Optional(0)\nOne player can play 0,1, or many characters\n\n\nPLAYER and PLAYER_CHARACTER\nTotal/Mandatory (1)\nOne player_character must belong to exactly one player\n\n\n\nTotal/Mandatory (1)\nEach player must have a player_character\n\n\nPLAYER and PLAYER_Achievement\nTotal/Mandatory (1)\nPlayer_achievement must belong to exactly one player\n\n\nPLAYER_Achievement ACHIEVEMENT\nTotal/Mandatory (1)\nEach player_achievement must belong to one or more\n\n\n\nPartial/Optional(0)\nachievements. Many achievements belong to one\n\n\n\n\nplayer_achievement\n\n\nPLAYER_Character and CHARACTER\nTotal/Mandatory (1)\nEach Player_Character has exactly one Character\n\n\n\nTotal/Mandatory (1)\nOne PLAYER_CHARACTER belongs to one Character\n\n\nCHARACTER and CLASS\nTotal/Mandatory (1)\nEach Character must have exactly one class\n\n\n\nTotal/Mandatory (1)\nEach Class must have a character it belongs to\n\n\nCHARACTER and RACE\nTotal/Mandatory (1)\nEach Character must have exactly one race\n\n\n\nTotal/Mandatory (1)\nEach race must have a character it belongs to\n\n\nCHARACTER and EQUIPMENT\nTotal/Mandatory (1)\nIf equipment is equipped, it is be equipped to character\n\n\n\nPartial/Optional(0)\nAll equipment is not necessarily equipped to characters\n\n\nBOSS and MONSTER\nTotal/Mandatory (1)\nA Boss must be a type of Monster\n\n\n\nTotal/Mandatory (1)\n\n\n\nMONSTER and NPC\nTotal/Mandatory (1)\nA Monster must be a type of NPC\n\n\n\nTotal/Mandatory (1)\n\n\n\nNPC and NPC_Faction\nTotal/Mandatory (1)\nOne NPC must belong to at least one faction\n\n\n\nTotal/Mandatory (1)\nIf a faction exists, it must belong to an NPC\n\n\nNPC and NPC_Location\nTotal/Mandatory (1)\nAn NPC must belong to a location\n\n\n\nPartial/Optional(0)\nA location can be empty, e.g., no NPCs are there\n\n\nNPC and CLASS\nTotal/Mandatory (1)\nAn NPC must belong to exactly one class\n\n\n\nTotal/Mandatory (1)\nA class must belong to an NPC\n\n\nNPC and RACE\nTotal/Mandatory (1)\nOne NPC belongs to one race\n\n\n\nTotal/Mandatory (1)\nA Race must belong to an NPC\n\n\nCLASS and CLASS_SPELL\nTotal/Mandatory (1)\nA class spell must belong to a class\n\n\n\nPartial/Optional(0)\nA class may not have any class spells\n\n\nCLASS_SPELL and SPELL\nTotal/Mandatory (1)\nA spell must be taught by a class spell\n\n\n\nPartial/Optional(0)\nA class spell may teach many or no spells\n\n\nCHARACTER and MONSTER\nTotal/Mandatory (1)\nA character must battle at least one monster\n\n\n\nPartial/Optional(0)\nA monster may or may not battle a character\n\n\nCHARACTER and CHARACTER_EVENT\nTotal/Mandatory (1)\nA character event must occur with one character\n\n\n\nPartial/Optional(0)\nA character can exist without character events\n\n\nEVENT and NPC\nPartial/Optional(0)\nAn NPC can exist without participating in events\n\n\n\nPartial/Optional(0)\nEvents can exist without participating NPCs"
  },
  {
    "objectID": "index.html#identify-and-explain",
    "href": "index.html#identify-and-explain",
    "title": "COP-5725—Group-Project",
    "section": "4.3 Identify and explain",
    "text": "4.3 Identify and explain\n\n4.3.1 Strong vs. weak entities\nOur database includes a variety of strong and weak entities to represent the complexity of the Dungeons & Dragons ecology.\nStrong Entities include:\nPlayer: Represents users of the system.\nCharacter: The core avatar controlled by a player.\nClass, Race, Spell, Equipment, NPC, Event, and Achievement: Each with independent existence and primary keys.\n\n\n4.3.2 Weak Entities include (Melanie Ortiz):\nMonster: Depends on Race and Class for full definition.\nBoss: A subtype of Monster, inheriting its attributes and adding boss-specific ones like PhaseCount and Lair.\nClassSpell: Links Class and Spell in a many-to-one relationship.\nCharacterEquipment: A many-to-many relationship between Character and Equipment.\nCharacterEvent: A many-to-many relationship between Character and Event.\nPlayerAchievement: A many-to-many relationship between Player and Achievement.\nThese weak entities rely on foreign keys and composite keys to maintain referential integrity and represent dependent relationships.\n\n\n4.3.3 Supertypes and subtypes with their distinguishing features.\nWe implemented a supertype-subtype relationship to model hierarchical data:\nSupertype: Monster\nSubtype: Boss\nThe Boss entity inherits all attributes from Monster (e.g., HP, AC, CR) and introduces additional attributes like PhaseCount and Lair. This structure allows us to distinguish between regular monsters and more complex boss encounters while maintaining a unified combat model."
  },
  {
    "objectID": "index.html#table-column-constraints",
    "href": "index.html#table-column-constraints",
    "title": "COP-5725—Group-Project",
    "section": "4.4 Table & Column Constraints",
    "text": "4.4 Table & Column Constraints\n\n4.4.1 Player Table\nTable Constraint\n\nPrimary Key: PlayerID\n\nColumn Constraints\n\nNot Null: Name, Email, JoinDate\nUnique: Email\n\n\n\n\n4.4.2 Character Table\nTable Constraint\n\nPrimary Key: CharacterID\nForeign Key: PlayerID\nOn Delete: CASCADE, On Update: CASCADE\nForeign Key: ClassID\nOn Delete: SET NULL, On Update: SET NULL\nForeign Key: RaceID\nOn Delete: SET NULL, On Update: SET NULL\n\nColumn Constraints\n\nNot Null: Name, Level, XP\nCheck: Level &gt;= 1, XP &gt;= 0\n\n\n\n\n4.4.3 Class Table\nTable Constraint\n\nPrimary Key: ClassID\n\nColumn Constraints\n\nNot Null: Name\n\n\n\n\n4.4.4 Race Table\nTable Constraint\n\nPrimary Key: RaceID\n\nColumn Constraints\n\nNot Null: Name\n\n\n\n\n4.4.5 Spell Table\nTable Constraint\n\nPrimary Key: SpellID\n\nColumn Constraints\n\nNot Null: Name, Level\nCheck: Level &gt;= 0\n\n\n\n\n4.4.6 Equipment Table\nTable Constraint\n\nPrimary Key: EquipmentID\n\nColumn Constraints\n\nNot Null: Name, Equipped\nCheck: Equipped IN (TRUE, FALSE)\n\n\n\n\n4.4.7 NPC Table\nTable Constraint\n\nPrimary Key: NPCID\nForeign Key: ClassID\nOn Delete: SET NULL, On Update: SET NULL\nForeign Key: RaceID\nOn Delete: SET NULL, On Update: SET NULL\nForeign Key: FactionID\nOn Delete: SET NULL, On Update: SET NULL\nForeign Key: LocationID\nOn Delete: SET NULL, On Update: SET NULL\n\nColumn Constraints\n\nNot Null: Name\n\n\n\n\n4.4.8 Event Table\nTable Constraint\n\nPrimary Key: EventID\n\nColumn Constraints\n\nNot Null: Name, Date"
  },
  {
    "objectID": "index.html#achievement-table",
    "href": "index.html#achievement-table",
    "title": "COP-5725—Group-Project",
    "section": "4.5 Achievement Table",
    "text": "4.5 Achievement Table\nTable Constraint\n\nPrimary Key: AchievementID\n\nColumn Constraints\n\nNot Null: Title\n\n\n\n4.5.1 Monster Table\nTable Constraint\n\nPrimary Key: MonsterID\nForeign Key: RaceID\nOn Delete: SET NULL, On Update: SET NULL\nForeign Key: ClassID\nOn Delete: SET NULL, On Update: SET NULL\nForeign Key: MonsterID (From NPC)\nOn Delete: CASCADE, On Update: CASCADE\n\nColumn Constraints\n\nNot Null: Name, HP, AC, CR\nCheck: HP &gt;= 0, AC &gt;= 0, CR &gt;= 0\n\n\n\n\n4.5.2 Boss Table\nTable Constraint\n\nPrimary Key: MonsterID\nForeign Key: MonsterID\nOn Delete: CASCADE, On Update: CASCADE\n\nColumn Constraints\n\nNot Null: PhaseCount\nCheck: PhaseCount &gt;= 1\n\n\n\n\n4.5.3 ClassSpell Table\nTable Constraint\n\nPrimary Key: ClassID, SpellID\nForeign Keys:\n\nClassID (On Delete: CASCADE, On Update: CASCADE)\nSpellID (On Delete: CASCADE, On Update: CASCADE)\n\n\n\n\n\n4.5.4 CharacterEquipment Table\nTable Constraint\n\nPrimary Key: CharacterID, EquipmentID\nForeign Keys:\n\nCharacterID (On Delete: CASCADE, On Update: CASCADE)\nEquipmentID (On Delete: CASCADE, On Update: CASCADE)\n\n\n\n\n\n4.5.5 CharacterEvent Table\nTable Constraint\n\nPrimary Key: CharacterID, EventID\nForeign Keys:\n\nCharacterID (On Delete: CASCADE, On Update: CASCADE)\nEventID (On Delete: CASCADE, On Update: CASCADE)\n\n\n\n\n\n4.5.6 PlayerAchievement Table\nTable Constraint\n\nPrimary Key: PlayerID, AchievementID\nForeign Keys:\n\nPlayerID (On Delete: CASCADE, On Update: CASCADE)\nAchievementID (On Delete: CASCADE, On Update: CASCADE)\n\n\n\n\n\n4.5.7 Faction Table\nTable Constraint\n\nPrimary Key: FactionID\n\nColumn Constraints\n\nNot Null: Name\n\n\n\n\n4.5.8 Location Table\nTable Constraint\n\nPrimary Key: LocationID\n\nColumn Constraints\n\nNot Null: Name\nOptional: Region, EnvironmentType, Coordinates (if included)"
  },
  {
    "objectID": "index.html#normalization-goals",
    "href": "index.html#normalization-goals",
    "title": "COP-5725—Group-Project",
    "section": "4.6 Normalization Goals",
    "text": "4.6 Normalization Goals\nAll tables in our Dungeons & Dragons database schema are normalized to Third Normal Form (3NF). This was straightforward to confirm due to the minimal attribute design and the absence of redundant or repeating data.\nEach entity contains only attributes that are fully dependent on its primary key, and no transitive dependencies exist. Relationship tables use composite keys to maintain referential integrity without introducing redundancy.\nThis normalization ensures:\n\nEfficient data storage\nLogical separation of concerns\nSimplified query design\nConsistency across relationships"
  },
  {
    "objectID": "index.html#create-tables",
    "href": "index.html#create-tables",
    "title": "COP-5725—Group-Project",
    "section": "5.1 Create Tables",
    "text": "5.1 Create Tables\n\n5.1.1 Player Table\nThe Player table creates and stores the player. Each player can control a character that is identified via a name and username.\nThe table is linked to the Character table through the foreign key. The table consists of the following:\nPlayerID: and Int identifies each player and is the primary key\nName: A string consists of the full name of the player\nUserName: a string that contains the player’s username. All usernames must be unique\nCharacterID: An int that is also a foreign key which links to the character table\n\nCREATE TABLE Player ( PlayerID INT PRIMARY KEY,\nName VARCHAR(255),\nUserName VARCHAR(255),\nCharacterID INT,\nFOREIGN KEY (CharacterID) REFERENCES Character(CharacterID) );\n\n\n5.1.2 Character Table\n\nCREATE TABLE Character (\nCharacterID INT PRIMARY KEY,\nName VARCHAR(255),\nLevel INT,\nXP INT,\nHP INT,\nMana INT,\nAlignment VARCHAR(255),\ncharClassID INT,\ncharRaceID INT,\nFOREIGN KEY (charClassID) REFERENCES Class(ClassID),\nFOREIGN KEY (charRaceID) REFERENCES Race(RaceID) )\n;\n\n\n5.1.3 Class Table\nThe Class table is used to store different character classes that are available for players. The table consists of the following:\nClassID: a primary key that uniquely identifies each class available\nClassName: a varchar that names each class\nHitDie: an Int that is used as a die for HP calculation\nPrimaryStat: a VarChar that shows the main stat for each class\nDescription: a text field providing details about each class\n\nCREATE TABLE Class (\nClassID INT PRIMARY KEY,\nClassName VARCHAR(255),\nHitDie INT,\nPrimaryStat VARCHAR(255),\nDescription TEXT )\n;\n\n\n5.1.4 Race Table\nThe Race table consists of data about each character’s race. The table contains the following data:\nRaceID: The primary key that uniquely identifies each available race\nRaceName: A varchar that names each race\nBonusStat: a Varchar that shows the benefits of each race\nDescription: a Text field that contains contextual background information for each race.\n\nCREATE TABLE Race (\nRaceID INT PRIMARY KEY,\nRaceName VARCHAR(255),\nBonusStat VARCHAR(255),\nDescription TEXT\n\n);\n\n\n5.1.5 Spell Table\nThe Spell table stores available spells and contains the following data:\nSpellID: A primary key that uniquely identifies each spell available\nName: a Varchar that contains the name of each spell\nLevel: An Int that shows the level of each spell\nSchool: a Varchar indicating which magical school the spell is part of\nEffect: a text field describing the capabilities of each spell\nCastingTime: a Varchar that contains the duration of casting time of each spell\nDuration: a Varchar that consists of how long the effects of the particular spell are expected to last\n\nCREATE TABLE Spell (\nSpellID INT PRIMARY KEY,\nName VARCHAR(255),\nLevel INT,\nSchool VARCHAR(255),\nEffect TEXT,\nCastingTime VARCHAR(255),\nDuration VARCHAR(255)\n\n);\n\n\n5.1.6 ClassSpell Table\nThe ClassSpell table stores the relationship between class and spell and contains the following data:\nClassID: An Int that stores what class the spell belongs to\nSpellID: uniquely identifies each spell.\n\nCREATE TABLE ClassSpell (\nClassID INT,\nSpellID INT,\nPRIMARY KEY (ClassID, SpellID),\nFOREIGN KEY (ClassID) REFERENCES Class(ClassID),\nFOREIGN KEY (SpellID) REFERENCES Spell(SpellID)\n\n);\n\n\n5.1.7 Monster Table\nThe Monster table stores enemy data “monster” and contains the following:\nMonsterID: the primary key uniquely identifying each monster\nName: A varchar containing each monster’s name\nRaceID: the foreign key that points to Race.RaceID\nClassID: a foreign key which points to Class.classID\n**CR: a Float that contains difficulty level\nHP: an Int containing health\nAC: an Int showing armor class\nType: a Varchar describing class/type of monster\nXP: a varchar showing how much XP is given after defeating said monster.\n\nCREATE TABLE Monster (\nMonsterID INT PRIMARY KEY,\nName VARCHAR(255),\nRaceID INT,\nClassID INT,\nCR FLOAT,\nHP INT,\nAC INT,\nType VARCHAR(255),\nXP INT,\nFOREIGN KEY (RaceID) REFERENCES Race(RaceID),\nFOREIGN KEY (ClassID) REFERENCES Class(ClassID)\n);\n\n\n5.1.8 Boss Table\nThe Boss contains data on different bosses encountered throughout the game.\nBossID: The primary key uniquely identifying each boss\nName: a Varchar that contains the name of each boss\nMonsterID: a foreign key pointing to Monster MonsterID\nPhaseCount: An Int showing the level of phases a boss has\nLair: A Varchar for the location of each boss.\n\nCREATE TABLE Boss (\nBossID INT PRIMARY KEY,\nName VARCHAR(255),\nMonsterID INT,\nPhaseCount INT,\nLair VARCHAR(255),\nFOREIGN KEY (MonsterID) REFERENCES Monster(MonsterID)\n);\n\n\n5.1.9 Equipment Table\nThe Equipment table contains all items that are attainable for players in the game. It contains the following data:\nEquipmentID: the primary key that uniquely identifies each item.\nName: a Varchar that contains the name of each item\nType: A varchar that contains the category of item\nBonus: A Varchar that contains bonus items\nRarity: A Varchar that displays the rarity of each item\nDescription: a Text field that explains what each item is and what it does\n\nCREATE TABLE Equipment (\nEquipmentID INT PRIMARY KEY,\nName VARCHAR(255),\nType VARCHAR(255),\nBonus VARCHAR(255),\nRarity VARCHAR(255),\nDescription TEXT )\n;\n\n\n5.1.10 CharacterEquipment Table\nThe CharacterEquipment table shows what equipment belongs to what character. It contains the following:\nCharactherID: a foreign key referencing Character.CharactherID\nEquipmentID: a foreign key referencing Characther.CharactherID\n\nCREATE TABLE CharacterEquipment ( CharacterID INT,\nEquipmentID INT,\nPRIMARY KEY (CharacterID, EquipmentID),\nFOREIGN KEY (CharacterID) REFERENCES Character(CharacterID),\nFOREIGN KEY (EquipmentID) REFERENCES Equipment(EquipmentID)\n);\n\n\n5.1.11 NPC Table\nThe NPC table contains the non-playable characters present in the game. It contains the following data:\nNPCID: the primary key uniquely identifying each NPC\nName: a Varchar containing the name of each NPC\nRole: A Varchar displaying the role of each NPC such as guard, merchant etc.\nFaction: the “guild” each NPC belongs to\nLocation: The location of each NPC\n\nCREATE TABLE NPC (\nNPCID INT PRIMARY KEY,\nName VARCHAR(255),\nRole VARCHAR(255),\nFaction VARCHAR(255),\nLocation VARCHAR(255)\n);\n\n\n5.1.12 Event Table\nThe Event table tracks all events in the game. It contains the following data:\nEventID: The primary key uniquely identifying each event.\nName: a Varchar which names each event\nDate: a Date which shows when the event occurred\nDescription: A text field explaining the event that occurred.\n\nCREATE TABLE Event (\nEventID INT PRIMARY KEY,\nName VARCHAR(255),\nDate DATE,\nDescription TEXT\n);\n\n\n5.1.13 CharacterEvent Table\nThe CharacterEvent table stores all events specific players have participated in. It contains the following:\nCharacterID: a foreign key referencing character.charactherID\nEventID: a foreign key referencing EventID\n\nCREATE TABLE CharacterEvent (\nCharacterID INT,\nEventID INT,\nPRIMARY KEY (CharacterID, EventID),\nFOREIGN KEY (CharacterID) REFERENCES Character(CharacterID),\nFOREIGN KEY (EventID) REFERENCES Event(EventID)\n);\n\n\n5.1.14 Achievement Table\nThe Achievement table stores all achievements players can accomplish throughout the game. It contains the following:\nAchievementID: The primary key uniquely identifying each achievement\nName: a Varchar that names each achievement\nDescription: A text field that describes how players can earn said achievement\nXPReward: An Int which shows the experience awarded for each achievement\n\nCREATE TABLE Achievement (\nAchievementID INT PRIMARY KEY,\nName VARCHAR(255),\nDescription TEXT,\nXPReward INT \n);\n\n\n5.1.15 PlayerAchievement Table\nThe PlayerAchievement table stores data referencing which player has been able to complete which achievement. It contains the following:\nPlayerID: A foreign key referencing Player.PlayerID\nAchievementID: A foreign key referencing Achievement.AchievementID\n\nCREATE TABLE PlayerAchievement ( PlayerID INT,\nAchievementID INT,\nPRIMARY KEY (PlayerID, AchievementID),\nFOREIGN KEY (PlayerID) REFERENCES Player(PlayerID),\nFOREIGN KEY (AchievementID) REFERENCES Achievement(AchievementID)\n);"
  },
  {
    "objectID": "index.html#insert-sample-data",
    "href": "index.html#insert-sample-data",
    "title": "COP-5725—Group-Project",
    "section": "5.2 Insert Sample Data",
    "text": "5.2 Insert Sample Data\nBelow are the initial dataset entries for key entities in the game database.\n\n5.2.1 Race Table\n    INSERT IGNORE INTO Race (RaceID) VALUES (301);\n    INSERT IGNORE INTO Race (RaceID) VALUES (303);\n    INSERT IGNORE INTO Race (RaceID) VALUES (304);\n    INSERT IGNORE INTO Race (RaceID) VALUES (305);\n\n\n5.2.2 Class Table\n    INSERT IGNORE INTO Class (ClassID) VALUES (201);\n    INSERT IGNORE INTO Class (ClassID) VALUES (202);\n    INSERT IGNORE INTO Class (ClassID) VALUES (203);\n    INSERT IGNORE INTO Class (ClassID) VALUES (204);\n\n\n5.2.3 Player Table\n    INSERT IGNORE INTO Player (PlayerID, Name) VALUES (101, 'Arin');\n    INSERT IGNORE INTO Player (PlayerID, Name) VALUES (102, 'Brenna');\n    INSERT IGNORE INTO Player (PlayerID, Name) VALUES (103, 'Cedric');\n    INSERT IGNORE INTO Player (PlayerID, Name) VALUES (104, 'Daria');\n    INSERT IGNORE INTO Player (PlayerID, Name) VALUES (105, 'Elandor');\n\n\n5.2.4 Character Table\n    INSERT IGNORE INTO Character (CharacterID, Name, Level) VALUES (501, 'worf', 10);\n    INSERT IGNORE INTO Character (CharacterID, Name, Level) VALUES (502, 'creeger', 12);\n    INSERT IGNORE INTO Character (CharacterID, Name, Level) VALUES (503, 'fendal', 15);\n    INSERT IGNORE INTO Character (CharacterID, Name, Level) VALUES (504, 'dar', 8);\n    INSERT IGNORE INTO Character (CharacterID, Name, Level) VALUES (505, 'edlor', 20);\n\n\n5.2.5 PlayerCharacter Table\n    INSERT IGNORE INTO PlayerCharacter (CharacterID, PlayerID) VALUES (501,  101);\n    INSERT IGNORE INTO PlayerCharacter (CharacterID, PlayerID) VALUES (502,  102);\n    INSERT IGNORE INTO PlayerCharacter (CharacterID, PlayerID) VALUES (503,  103);\n    INSERT IGNORE INTO PlayerCharacter (CharacterID, PlayerID) VALUES (504,  104);\n    INSERT IGNORE INTO PlayerCharacter (CharacterID, PlayerID) VALUES (505,  105);\n\n\n5.2.6 Equipment Table\n    INSERT IGNORE INTO Equipment (EquipmentID, Name, Type, Bonus, Rarity, Description, Equipped )\n    VALUES (894, 'Longsword of Valor', 'Weapon', '+2 ATK', 'Rare', 'A shining blade blessed by paladins.', TRUE);\n    INSERT IGNORE INTO Equipment (EquipmentID, Name, Type, Bonus, Rarity, Description, Equipped)\n    VALUES (847, 'Cloak of Shadows', 'Armor', '+1 STEALTH', 'Uncommon', 'Blends with the darkness.', TRUE);\n    INSERT IGNORE INTO Equipment (EquipmentID, Name, Type, Bonus, Rarity, Description, Equipped)\n    VALUES (857, 'Ring of Fire', 'Accessory', '+1 FIRE DMG', 'Rare', 'Grants control over flame.', TRUE);\n    INSERT IGNORE INTO Equipment (EquipmentID, Name, Type, Bonus, Rarity, Description, Equipped)\n    VALUES (820, 'Boots of Haste', 'Armor', '+10 SPEED', 'Rare', 'Doubles movement speed.', TRUE);\n    INSERT IGNORE INTO Equipment (EquipmentID, Name, Type, Bonus, Rarity, Description, Equipped)\n    VALUES (869, 'Amulet of Vitality', 'Accessory', '+15 HP', 'Epic', 'Boosts health significantly.', TRUE);\n\n\n5.2.7 CharacterEquipment Table\n    INSERT IGNORE INTO CharacterEquipment (CharacterID, EquipmentID) VALUES (501, 894);\n    INSERT IGNORE INTO CharacterEquipment (CharacterID, EquipmentID) VALUES (502, 847);\n    INSERT IGNORE INTO CharacterEquipment (CharacterID, EquipmentID) VALUES (503, 857);\n    INSERT IGNORE INTO CharacterEquipment (CharacterID, EquipmentID) VALUES (504, 820);\n    INSERT IGNORE INTO CharacterEquipment (CharacterID, EquipmentID) VALUES (505, 869);\n\n\n5.2.8 Monster Table\n    INSERT IGNORE INTO Monster (MonsterID, Name, RaceID, ClassID, CR, HP, AC, Type, XP)\n    VALUES (647, 'Goblin Brute', 303, 201, 0.25, 22, 15, 'Beast', 100);\n    INSERT IGNORE INTO Monster (MonsterID, Name, RaceID, ClassID, CR, HP, AC, Type, XP)\n    VALUES (650, 'Fire Imp', 304, 202, 0.5, 18, 13, 'Fiend', 150);\n    INSERT IGNORE INTO Monster (MonsterID, Name, RaceID, ClassID, CR, HP, AC, Type, XP)\n    VALUES (626, 'Skeleton Archer', 303, 203, 0.75, 30, 12, 'Undead', 200);\n    INSERT IGNORE INTO Monster (MonsterID, Name, RaceID, ClassID, CR, HP, AC, Type, XP)\n    VALUES (635, 'Bandit Captain', 301, 201, 1.5, 60, 16, 'Humanoid', 450);\n    INSERT IGNORE INTO Monster (MonsterID, Name, RaceID, ClassID, CR, HP, AC, Type, XP)\n    VALUES (637, 'Dark Druid', 305, 204, 2.0, 75, 14, 'Caster', 600);\n\n\n5.2.9 Boss Table\n    INSERT IGNORE INTO Boss (BossID, Name, MonsterID, PhaseCount, Lair)\n    VALUES (751, 'Goroth the Devourer', 637, 3, 'Ashen Caverns');\n    INSERT IGNORE INTO Boss (BossID, Name, MonsterID, PhaseCount, Lair)\n    VALUES (733, 'Zeriel the Flameborn', 650, 2, 'Crimson Tower');\n    INSERT IGNORE INTO Boss (BossID, Name, MonsterID, PhaseCount, Lair)\n    VALUES (735, 'Thornshade', 626, 1, 'Whispering Woods');\n    INSERT IGNORE INTO Boss (BossID, Name, MonsterID, PhaseCount, Lair)\n    VALUES (746, 'Valkor Doomhammer', 647, 2, 'Broken Citadel');\n    INSERT IGNORE INTO Boss (BossID, Name, MonsterID, PhaseCount, Lair)\n    VALUES (729, 'Morwenna the Hollow', 635, 4, 'Eclipsed Sanctum');\n\n\n5.2.10 NPC Table\n    INSERT IGNORE INTO NPC (NPCID, Name, Role, Faction, Location)\n    VALUES (904, 'Marcus Ironshield', 'Blacksmith', 'Steelguard', 'Forge Town');\n    INSERT IGNORE INTO NPC (NPCID, Name, Role, Faction, Location)\n    VALUES (993, 'Selene Moonwhisper', 'Merchant', 'Silver Circle', 'Elaria Market');\n    INSERT IGNORE INTO NPC (NPCID, Name, Role, Faction, Location)\n    VALUES (987, 'Thaddeus Grin', 'Guard', 'Crimson Watch', 'North Gate');\n    INSERT IGNORE INTO NPC (NPCID, Name, Role, Faction, Location)\n    VALUES (964, 'Lira Sunpetal', 'Healer', 'Verdant Grove', 'Sacred Glade');\n    INSERT IGNORE INTO NPC (NPCID, Name, Role, Faction, Location)\n    VALUES (984, 'Drogath Stonefist', 'Trainer', 'Stoneclaw Clan', 'Battle Arena');\n\n\n5.2.11 Event Table\n    INSERT IGNORE INTO Event (EventID, Name, Date, Description, Type)\n    VALUES (1063, 'Battle of Emberfall', '2024-05-12', 'The city was nearly razed by flame elementals.', 'Battle');\n    INSERT IGNORE INTO Event (EventID, Name, Date, Description, Type)\n    VALUES (1090, 'Siege of Thornkeep', '2024-06-23', 'A brutal 3-day battle against undead forces.', 'Battle');\n    INSERT IGNORE INTO Event (EventID, Name, Date, Description, Type)\n    VALUES (1057, 'Festival of Light', '2024-07-15', 'Celebration of the gods’ blessings.', 'Festival');\n    INSERT IGNORE INTO Event (EventID, Name, Date, Description, Type)\n    VALUES (1087, 'Rogue Uprising', '2024-08-02', 'Thieves guild attacked the capital.', 'Quest');\n    INSERT IGNORE INTO Event (EventID, Name, Date, Description, Type)\n    VALUES (1004, 'Mystic Eclipse', '2024-09-30', 'A magical event altering mana flows.', 'Quest');\n\n\n5.2.12 CharacterEvent Table\n    INSERT IGNORE INTO CharacterEvent (CharacterID, EventID) VALUES (501, 1063);\n    INSERT IGNORE INTO CharacterEvent (CharacterID, EventID) VALUES (502, 1090);\n    INSERT IGNORE INTO CharacterEvent (CharacterID, EventID) VALUES (503, 1057);\n    INSERT IGNORE INTO CharacterEvent (CharacterID, EventID) VALUES (504, 1087);\n    INSERT IGNORE INTO CharacterEvent (CharacterID, EventID) VALUES (505, 1004);\n\n\n5.2.13 Achievement Table\n    INSERT IGNORE INTO Achievement (AchievementID, Name, Description, XPReward)\n    VALUES (1130, 'First Blood', 'Defeat your first enemy.', 100);\n    INSERT IGNORE INTO Achievement (AchievementID, Name, Description, XPReward)\n    VALUES (1143, 'Explorer', 'Visit 10 unique locations.', 250);\n    INSERT IGNORE INTO Achievement (AchievementID, Name, Description, XPReward)\n    VALUES (1193, 'Elite Slayer', 'Defeat an elite monster.', 500);\n    INSERT IGNORE INTO Achievement (AchievementID, Name, Description, XPReward)\n    VALUES (1160, 'Master of Magic', 'Learn 10 spells.', 400);\n    INSERT IGNORE INTO Achievement (AchievementID, Name, Description, XPReward)\n    VALUES (1116, 'Hero of the Realm', 'Complete the main questline.', 1000);\n\n\n5.2.14 PlayerAchievement Table\n    INSERT IGNORE INTO PlayerAchievement (PlayerID, AchievementID) VALUES (101, 1130);\n    INSERT IGNORE INTO PlayerAchievement (PlayerID, AchievementID) VALUES (102, 1143);\n    INSERT IGNORE INTO PlayerAchievement (PlayerID, AchievementID) VALUES (103, 1193);\n    INSERT IGNORE INTO PlayerAchievement (PlayerID, AchievementID) VALUES (104, 1160);\n    INSERT IGNORE INTO PlayerAchievement (PlayerID, AchievementID) VALUES (105, 1116);\n\n\n5.2.15 CharacterEvent Table\n    INSERT IGNORE INTO CharacterEvent (CharacterID, EventID, Result) VALUES (501, 1063, 'Won');\n    INSERT IGNORE INTO CharacterEvent (CharacterID, EventID, Result) VALUES (502, 1063, 'Won');\n    INSERT IGNORE INTO CharacterEvent (CharacterID, EventID, Result) VALUES (503, 1063, 'Lost');\n    INSERT IGNORE INTO CharacterEvent (CharacterID, EventID, Result) VALUES (504, 1063, 'Lost');\n    INSERT IGNORE INTO CharacterEvent (CharacterID, EventID, Result) VALUES (505, 1063, 'Lost');\n### Spell Table\n    INSERT INTO Spell (SpellID, Name, Level, School, Effect, CastingTime, Duration) VALUES\n    (401, 'Fireball', 3, 'Evocation', 'Deals fire damage in a 20-foot radius.', '1 action', 'Instantaneous'),\n    (402, 'Cure Wounds', 1, 'Evocation', 'Heals a target creature.', '1 action', 'Instantaneous'),\n    (403, 'Mage Armor', 1, 'Abjuration', 'Gives +3 AC to a creature without armor.', '1 action', '8 hours'),\n    (404, 'Invisibility', 2, 'Illusion', 'Makes a creature invisible.', '1 action', 'Up to 1 hour'),\n    (405, 'Shield', 1, 'Abjuration', 'Gives +5 AC until start of your next turn.', '1 reaction', '1 round');\n    \"\"\",\n\n\n5.2.16 ClassSpell\n    INSERT INTO ClassSpell (ClassID, SpellID) VALUES\n    (201, 401),  \n    (202, 402),  \n    (201, 403),  \n    (203, 404),  \n    (204, 405);"
  },
  {
    "objectID": "index.html#write-execute-complex-queries",
    "href": "index.html#write-execute-complex-queries",
    "title": "COP-5725—Group-Project",
    "section": "5.3 Write & Execute Complex Queries",
    "text": "5.3 Write & Execute Complex Queries\n\n5.3.1 Lists all Characters with their class, race, and equiment\nThe DM (Dungeon Master) managing a digital D&D campaign management system. has characters with equipment that can be equipped or unequipped.\nYou want to display each character’s currently equipped gear on a dashboard or character sheet.\n    SELECT \n        c.Name AS CharacterName,\n        e.Name AS EquipmentName,\n        e.Type,\n        e.Bonus,\n        e.Rarity\n    FROM \n        `Character` c\n    JOIN \n        CharacterEquipment ce ON c.CharacterID = ce.CharacterID\n    JOIN \n        Equipment e ON ce.EquipmentID = e.EquipmentID\n    WHERE \n        e.Equipped = TRUE\n    ORDER BY c.Name;\n\n\n\nCharacterName\nEquipmentName\nType\nBonus\nRarity\n\n\n\n\nworf\nLongsword of Valor\nWeapon\n+2 ATK\nRare\n\n\ncreeger\nCloak of Shadows\nArmor\n+1 STEALTH\nUncommon\n\n\nfendal\nRing of Fire\nAccessory\n+1 FIRE DMG\nRare\n\n\ndar\nBoots of Haste\nArmor\n+10 SPEED\nRare\n\n\nedlor\nAmulet of Vitality\nAccessory\n+15 HP\nEpic\n\n\n\n\n\n5.3.2 Finds all spells available to a character\nDM (Dungeon Master) creates a reference tool or in-game spellbook UI that shows what spells each class has access to, sorted by class name and spell level.\n   SELECT \n       s.Name AS SpellName,\n       s.Level,\n       s.School,\n       s.CastingTime,\n       s.Duration\n   FROM \n       ClassSpell cs\n   JOIN \n       Class cl ON cs.ClassID = cl.ClassID\n   JOIN \n       Spell s ON cs.SpellID = s.SpellID\n   ORDER BY \n       cl.ClassName, s.Level;\n\n\n\n\n\n\n\n\n\n\nSpellName\nLevel\nSchool\nCastingTime\nDuration\n\n\n\n\nMage Armor\n1\nAbjuration\n1 action\n8 hours\n\n\nCure Wounds 1\nEvocation\n1 action\nInstantaneous\n\n\n\nShield\n1\nAbjuration\n1 reaction\n1 round\n\n\nInvisibility\n2\nIllusion\n1 action\nUp to 1 hour\n\n\nFireball\n3\nEvocation\n1 action\nInstantaneous\n\n\n\n\n\n5.3.3 Lists all players and what events they have participated in.\nWhile building a campaign tracking tool for a Dungeons & Dragons groupand managing a player activity log in a digital RPG platform.\nWe track every event that each player’s character has participated in, and present this as a logbook or activity timeline, sorted by player and most recent events.\n    SELECT\n        p.UserName,\n        c.Name AS CharacterName,\n         e.Name AS EventName,\n        e.Date AS EventDate\n    FROM Player p\n    JOIN PlayerCharacter pc ON p.PlayerID = pc.PlayerID\n    JOIN Character c ON pc.CharacterID = c.CharacterID\n    JOIN CharacterEvent ce ON c.CharacterID = ce.CharacterID\n    JOIN Event e ON ce.EventID = e.EventID\n    ORDER BY p.UserName, e.Date DESC;\n\n\n\nPlayerName\nEventName\nEventDate\n\n\n\n\nArin\nBattle of Emberfall\n2024-05-12\n\n\nBrenna\nSiege of Thornkeep\n2024-06-23\n\n\nCedric\nFestival of Light\n2024-07-15\n\n\nDaria\nRogue Uprising\n2024-08-02\n\n\nElandor\nMystic Eclipse\n2024-09-30\n\n\n\n\n\n5.3.4 Average level of XP per class\nAs the game designer and building a player analytics dashboard. We want to evaluate how players are progressing with different character classes over time.\n    SELECT\n        cl.ClassName,\n        AVG(c.Level) AS AvgLevel,\n        SUM(c.XP) AS TotalXP\n    FROM Character c\n    JOIN Class cl ON c.charClassID = cl.ClassID\n    GROUP BY cl.ClassName\n    ORDER BY AvgLevel DESC;\n\n\n\nClassName\nAvgLevel\nTotalXP\n\n\n\n\nMage\n18.5\n12500\n\n\nFighter\n12.0\n7200\n\n\nRogue\n7.5\n3900\n\n\n\n\n\n5.3.5 won battles by character\nAs we run this competitive D&D-style campaign we want to manage a digital RPG platform where characters participate in events. We want to track and reward characters who win battles the most.\n    SELECT\n        c.Name AS CharacterName,\n        COUNT(DISTINCT e.EventID) AS BattlesWon\n    FROM Character c\n    JOIN CharacterEvent ce ON c.CharacterID = ce.CharacterID\n    JOIN Event e ON ce.EventID = e.EventID\n    WHERE e.Type = 'Battle'\n    AND e.Result = 'Won'\n    GROUP BY c.Name\n    ORDER BY BattlesWon DESC;\n\n\n\nCharacterName\nEventName\nEventDate\n\n\n\n\nworf\nBattle of Emberfall\n2024-05-12\n\n\ncreeger\nBattle of Emberfall\n2024-05-12"
  },
  {
    "objectID": "index.html#show-reverse-engineered-diagram",
    "href": "index.html#show-reverse-engineered-diagram",
    "title": "COP-5725—Group-Project",
    "section": "5.4 Show Reverse-Engineered Diagram",
    "text": "5.4 Show Reverse-Engineered Diagram\n\n\n\nReverse Engineering Diagram From Python"
  },
  {
    "objectID": "Entities.html",
    "href": "Entities.html",
    "title": "🧙 D&D Database Entities",
    "section": "",
    "text": "This document describes the entity schema based on the ER diagrams for a Dungeons & Dragons-based game system.\n\n\n\n\n\n\nField\nType\nDescription\n\n\n\n\nPlayerID\nINT (PK)\nUnique player ID\n\n\nName\nVARCHAR\nPlayer’s full name\n\n\nUserName\nVARCHAR\nLogin or nickname\n\n\n\nAssociations:\n\nPlayerCharacter (Associative):\n\nPlayerID (FK)\nCharacterID (FK)\n\nPlayerAchievement (Associative):\n\nPlayerID (FK)\nAchievementID (FK)\n\n\n\n\n\n\n\n\n\nField\nType\nDescription\n\n\n\n\nCharacterID\nINT (PK)\nUnique character ID\n\n\nName\nVARCHAR\nCharacter name\n\n\nLevel\nINT\nCharacter level\n\n\ncharClassID\nINT (FK)\nLinks to Class\n\n\nXP\nINT\nExperience points\n\n\ncharRaceID\nINT (FK)\nLinks to Race\n\n\nHP\nINT\nCurrent hit points\n\n\nMana\nINT\nMana or spell slots\n\n\nAlignment\nVARCHAR\nAlignment (e.g., LG, CE)\n\n\n\nAssociations:\n\nBelongs to one Class and one Race\nEquips many Equipment via CHARACTER_EQUIPMENT\nParticipates in many Events via CHARACTER_EVENT\nFights many Monsters\n\n\n\n\n\n\n\n\nField\nType\nDescription\n\n\n\n\nRaceID\nINT (PK)\nUnique race ID\n\n\nRaceName\nVARCHAR\ne.g., Human, Elf\n\n\nbonusStat\nVARCHAR\nStat bonus (e.g., STR)\n\n\nDescription\nTEXT\nRace description\n\n\n\n\n\n\n\n\n\n\nField\nType\nDescription\n\n\n\n\nClassID\nINT (PK)\nUnique class ID\n\n\nClassName\nVARCHAR\nWizard, Fighter, etc.\n\n\nHitDie\nINT\nHit die (6, 8, 10)\n\n\nPrimaryStat\nVARCHAR\nINT, STR, etc.\n\n\nDescription\nTEXT\nClass description\n\n\n\nAssociations:\n\nHas many Spells via CLASS_SPELL\nReferenced by Character and Monster\n\n\n\n\n\n\n\n\nField\nType\nDescription\n\n\n\n\nSpellID\nINT (PK)\nUnique spell ID\n\n\nName\nVARCHAR\nSpell name\n\n\nLevel\nINT\nSpell level (0–9)\n\n\nSchool\nVARCHAR\nMagic school\n\n\nEffect\nTEXT\nDescription of the effect\n\n\nCastingTime\nVARCHAR\nAction, Bonus, etc.\n\n\nDuration\nVARCHAR\nInstant, 1 hour, etc.\n\n\n\nAssociations:\n\nLinked through ClassSpell: ClassID, SpellID\n\n\n\n\n\n\n\n\nField\nType\nDescription\n\n\n\n\nMonsterID\nINT (PK)\nUnique monster ID\n\n\nName\nVARCHAR\nCreature name\n\n\nraceID\nINT (FK)\nRace reference\n\n\nclassID\nINT (FK)\nClass reference\n\n\nCR\nFLOAT\nChallenge rating\n\n\nHP\nINT\nHit points\n\n\nAC\nINT\nArmor class\n\n\nType\nVARCHAR\nCreature type\n\n\nXP\nINT\nXP given when defeated\n\n\nMonsterID\nINT (PK, FK)\nAlso NPCID\n\n\n\n\n\n\n\n\n\n\nField\nType\nDescription\n\n\n\n\nBossID\nINT (PK)\nUnique boss ID\n\n\nName\nVARCHAR\nBoss name\n\n\nMonsterID\nINT (FK)\nInherits from Monster\n\n\nPhaseCount\nINT\nPhases in the fight\n\n\nLair\nVARCHAR\nLocation of boss fight\n\n\n\n\n\n\n\n\n\n\nField\nType\nDescription\n\n\n\n\nEquipmentID\nINT (PK)\nUnique ID\n\n\nName\nVARCHAR\nItem name\n\n\nType\nVARCHAR\nWeapon, Armor, etc.\n\n\nQuantity\nINT\nStackable count\n\n\nEquiped\nBOOL\nWhether equipped\n\n\nBonus\nVARCHAR\nStat bonus (e.g. +1 STR)\n\n\nRarity\nVARCHAR\nCommon, Rare, etc.\n\n\nDescription\nTEXT\nFlavor or effect text\n\n\n\nAssociations:\n\nEquipped via CharacterEquipment: CharacterID, EquipmentID\n\n\n\n\n\n\n\n\nField\nType\nDescription\n\n\n\n\nNPCID\nINT (PK)\nUnique NPC ID\n\n\nName\nVARCHAR\nCharacter name\n\n\nRole\nVARCHAR\nVendor, Questgiver, etc.\n\n\nclassID\nINT (FK)\nLinks to Class\n\n\nraceID\nINT (FK)\nLinks to Race\n\n\nFactionID\nINT (FK)\nBelongs to Faction\n\n\n\nAssociations: - Located in multiple locations via NPC_LOCATION - Can participate in EVENT - Has Class and Race (foreign keys)\n\n\n\n\n\n\n\nField\nType\nDescription\n\n\n\n\nFactionID\nINT (PK)\nUnique faction ID\n\n\nName\nVARCHAR\nFaction name\n\n\nPurpose\nTEXT\nLore or goal\n\n\nAlignment\nVARCHAR\ne.g., Neutral Evil\n\n\n\n\n\n\n\n\n\n\nField\nType\nDescription\n\n\n\n\nEventID\nINT (PK)\nUnique event ID\n\n\nName\nVARCHAR\nEvent title\n\n\nDate\nDATE\nDate of event\n\n\nDescription\nTEXT\nWhat occurred\n\n\n\nAssociations:\n\nInvolves characters through CHARACTER_EVENT\nNPCs may also participate\n\n\n\n\n\n\n\n\nField\nType\nDescription\n\n\n\n\nNPCLocID\nINT (PK)\nUnique ID\n\n\nNPCID\nINT (FK)\nLinked NPC\n\n\nLocation\nVARCHAR\nLocation name\n\n\nIsCurrent\nBOOL\nIs NPC currently there?\n\n\n\n\n\n\n\n\n\n\nField\nType\nDescription\n\n\n\n\nAchievementID\nINT (PK)\nUnique achievement ID\n\n\nName\nVARCHAR\nAchievement title\n\n\nDescription\nTEXT\nHow it was earned\n\n\nXPReward\nINT\nXP granted if any\n\n\n\nAssociations:\n\nEarned by players via PLAYER_ACHIEVEMENT"
  },
  {
    "objectID": "Entities.html#player-strong-entity",
    "href": "Entities.html#player-strong-entity",
    "title": "🧙 D&D Database Entities",
    "section": "",
    "text": "Field\nType\nDescription\n\n\n\n\nPlayerID\nINT (PK)\nUnique player ID\n\n\nName\nVARCHAR\nPlayer’s full name\n\n\nUserName\nVARCHAR\nLogin or nickname\n\n\n\nAssociations:\n\nPlayerCharacter (Associative):\n\nPlayerID (FK)\nCharacterID (FK)\n\nPlayerAchievement (Associative):\n\nPlayerID (FK)\nAchievementID (FK)"
  },
  {
    "objectID": "Entities.html#character-strong-entity",
    "href": "Entities.html#character-strong-entity",
    "title": "🧙 D&D Database Entities",
    "section": "",
    "text": "Field\nType\nDescription\n\n\n\n\nCharacterID\nINT (PK)\nUnique character ID\n\n\nName\nVARCHAR\nCharacter name\n\n\nLevel\nINT\nCharacter level\n\n\ncharClassID\nINT (FK)\nLinks to Class\n\n\nXP\nINT\nExperience points\n\n\ncharRaceID\nINT (FK)\nLinks to Race\n\n\nHP\nINT\nCurrent hit points\n\n\nMana\nINT\nMana or spell slots\n\n\nAlignment\nVARCHAR\nAlignment (e.g., LG, CE)\n\n\n\nAssociations:\n\nBelongs to one Class and one Race\nEquips many Equipment via CHARACTER_EQUIPMENT\nParticipates in many Events via CHARACTER_EVENT\nFights many Monsters"
  },
  {
    "objectID": "Entities.html#race-strong-entity",
    "href": "Entities.html#race-strong-entity",
    "title": "🧙 D&D Database Entities",
    "section": "",
    "text": "Field\nType\nDescription\n\n\n\n\nRaceID\nINT (PK)\nUnique race ID\n\n\nRaceName\nVARCHAR\ne.g., Human, Elf\n\n\nbonusStat\nVARCHAR\nStat bonus (e.g., STR)\n\n\nDescription\nTEXT\nRace description"
  },
  {
    "objectID": "Entities.html#class-strong-entity",
    "href": "Entities.html#class-strong-entity",
    "title": "🧙 D&D Database Entities",
    "section": "",
    "text": "Field\nType\nDescription\n\n\n\n\nClassID\nINT (PK)\nUnique class ID\n\n\nClassName\nVARCHAR\nWizard, Fighter, etc.\n\n\nHitDie\nINT\nHit die (6, 8, 10)\n\n\nPrimaryStat\nVARCHAR\nINT, STR, etc.\n\n\nDescription\nTEXT\nClass description\n\n\n\nAssociations:\n\nHas many Spells via CLASS_SPELL\nReferenced by Character and Monster"
  },
  {
    "objectID": "Entities.html#spell-strong-entity",
    "href": "Entities.html#spell-strong-entity",
    "title": "🧙 D&D Database Entities",
    "section": "",
    "text": "Field\nType\nDescription\n\n\n\n\nSpellID\nINT (PK)\nUnique spell ID\n\n\nName\nVARCHAR\nSpell name\n\n\nLevel\nINT\nSpell level (0–9)\n\n\nSchool\nVARCHAR\nMagic school\n\n\nEffect\nTEXT\nDescription of the effect\n\n\nCastingTime\nVARCHAR\nAction, Bonus, etc.\n\n\nDuration\nVARCHAR\nInstant, 1 hour, etc.\n\n\n\nAssociations:\n\nLinked through ClassSpell: ClassID, SpellID"
  },
  {
    "objectID": "Entities.html#monster-weak-entity",
    "href": "Entities.html#monster-weak-entity",
    "title": "🧙 D&D Database Entities",
    "section": "",
    "text": "Field\nType\nDescription\n\n\n\n\nMonsterID\nINT (PK)\nUnique monster ID\n\n\nName\nVARCHAR\nCreature name\n\n\nraceID\nINT (FK)\nRace reference\n\n\nclassID\nINT (FK)\nClass reference\n\n\nCR\nFLOAT\nChallenge rating\n\n\nHP\nINT\nHit points\n\n\nAC\nINT\nArmor class\n\n\nType\nVARCHAR\nCreature type\n\n\nXP\nINT\nXP given when defeated\n\n\nMonsterID\nINT (PK, FK)\nAlso NPCID"
  },
  {
    "objectID": "Entities.html#boss-subtype-of-monster",
    "href": "Entities.html#boss-subtype-of-monster",
    "title": "🧙 D&D Database Entities",
    "section": "",
    "text": "Field\nType\nDescription\n\n\n\n\nBossID\nINT (PK)\nUnique boss ID\n\n\nName\nVARCHAR\nBoss name\n\n\nMonsterID\nINT (FK)\nInherits from Monster\n\n\nPhaseCount\nINT\nPhases in the fight\n\n\nLair\nVARCHAR\nLocation of boss fight"
  },
  {
    "objectID": "Entities.html#equipment-strong-entity",
    "href": "Entities.html#equipment-strong-entity",
    "title": "🧙 D&D Database Entities",
    "section": "",
    "text": "Field\nType\nDescription\n\n\n\n\nEquipmentID\nINT (PK)\nUnique ID\n\n\nName\nVARCHAR\nItem name\n\n\nType\nVARCHAR\nWeapon, Armor, etc.\n\n\nQuantity\nINT\nStackable count\n\n\nEquiped\nBOOL\nWhether equipped\n\n\nBonus\nVARCHAR\nStat bonus (e.g. +1 STR)\n\n\nRarity\nVARCHAR\nCommon, Rare, etc.\n\n\nDescription\nTEXT\nFlavor or effect text\n\n\n\nAssociations:\n\nEquipped via CharacterEquipment: CharacterID, EquipmentID"
  },
  {
    "objectID": "Entities.html#npc-strong-entity",
    "href": "Entities.html#npc-strong-entity",
    "title": "🧙 D&D Database Entities",
    "section": "",
    "text": "Field\nType\nDescription\n\n\n\n\nNPCID\nINT (PK)\nUnique NPC ID\n\n\nName\nVARCHAR\nCharacter name\n\n\nRole\nVARCHAR\nVendor, Questgiver, etc.\n\n\nclassID\nINT (FK)\nLinks to Class\n\n\nraceID\nINT (FK)\nLinks to Race\n\n\nFactionID\nINT (FK)\nBelongs to Faction\n\n\n\nAssociations: - Located in multiple locations via NPC_LOCATION - Can participate in EVENT - Has Class and Race (foreign keys)"
  },
  {
    "objectID": "Entities.html#faction-strong-entity",
    "href": "Entities.html#faction-strong-entity",
    "title": "🧙 D&D Database Entities",
    "section": "",
    "text": "Field\nType\nDescription\n\n\n\n\nFactionID\nINT (PK)\nUnique faction ID\n\n\nName\nVARCHAR\nFaction name\n\n\nPurpose\nTEXT\nLore or goal\n\n\nAlignment\nVARCHAR\ne.g., Neutral Evil"
  },
  {
    "objectID": "Entities.html#event-strong-entity",
    "href": "Entities.html#event-strong-entity",
    "title": "🧙 D&D Database Entities",
    "section": "",
    "text": "Field\nType\nDescription\n\n\n\n\nEventID\nINT (PK)\nUnique event ID\n\n\nName\nVARCHAR\nEvent title\n\n\nDate\nDATE\nDate of event\n\n\nDescription\nTEXT\nWhat occurred\n\n\n\nAssociations:\n\nInvolves characters through CHARACTER_EVENT\nNPCs may also participate"
  },
  {
    "objectID": "Entities.html#npc_location-weakassociative-entity",
    "href": "Entities.html#npc_location-weakassociative-entity",
    "title": "🧙 D&D Database Entities",
    "section": "",
    "text": "Field\nType\nDescription\n\n\n\n\nNPCLocID\nINT (PK)\nUnique ID\n\n\nNPCID\nINT (FK)\nLinked NPC\n\n\nLocation\nVARCHAR\nLocation name\n\n\nIsCurrent\nBOOL\nIs NPC currently there?"
  },
  {
    "objectID": "Entities.html#achievement-strong-entity",
    "href": "Entities.html#achievement-strong-entity",
    "title": "🧙 D&D Database Entities",
    "section": "",
    "text": "Field\nType\nDescription\n\n\n\n\nAchievementID\nINT (PK)\nUnique achievement ID\n\n\nName\nVARCHAR\nAchievement title\n\n\nDescription\nTEXT\nHow it was earned\n\n\nXPReward\nINT\nXP granted if any\n\n\n\nAssociations:\n\nEarned by players via PLAYER_ACHIEVEMENT"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This is a group project. A group may have 3 or 4 people. For this project, I would like only one submission per group. Make sure you include all participating group members, otherwise they will not get credit. Group members you can find it through Ed discussion forum. For example, you can go through the Introduce yourself page or create a thread to find group members.\nThe project is meant to bring all the concepts that you learned in this class together. So, you start off by designing the database, then you proceed to mapping and implementing it – so you go all the way from designing a database, documenting it, to implementing it in MySQL.\n\nThe project\nDesign and develop a database of your choice that includes at least:\n1. 5-7 regular strong entities.\n2. One strong and weak entities relationship 3. One supertype and subtype relationship\n4. One 1:1, one 1:M, and one M: N relationship.\n5. Other notes:\no Do not emphasize on too many attributes for the entities.\no Three to four attributes for each entity will be enough.\no Make sure to include a primary key for each entity and use foreign key wherever needed.\n\n\nPhases of the projects:\n\nPhase 1\n\n\nIdentify entities, relationships, attributes\nDesign EER diagram\n\n\nPhase 2\n\n\nInclude cardinality for relationships and attributes in EER diagram\n\nDemonstrate at least one example of strong and weak entities\nDemonstrate at least one example of supertype and subtype entities\n\n\nPhase 3\n\n\nWrite the specifications for your database (Structured English). You need to write out the specifications for only one entity.\n\nWrite out ALL the cardinalities and participation ratios (for all relationships), and explain all the strong and weak, supertype and subtype relationships.\nWrite all the column and table constraints.\n\nNormalization: Try to achieve at least 3NF design.\n\n\nPhase 4\n\n\nImplement the EER diagram into MySQL database\nCreate tables according to the mapping. For this part, submit a description of the tables created in the report.\n\nAdd at least five records. Submit a copy of all the records inserted in the report.\n\nWrite and answer some (at least five) “reasonable” queries for your database.\n\nWhen I say reasonable queries – I mean 3-4 table joins to use most of the tables or group of tables in your database. You should not have tables that are of no use. For this part, first, write the queries in English – that is, telling me what you are finding in the queries. Then, present the query and finally present the output of the query. e. Include the imported diagram using reverse engineering.\n\n\nSubmission guidelines of the projects:\n\nInclude all the group member’s name at the top in the project.\n\nOrganize the report in four phases.\n\nSubmit one PDF file including all the phases.\n\nGood Luck!!"
  },
  {
    "objectID": "Introduction.html",
    "href": "Introduction.html",
    "title": "Introduction",
    "section": "",
    "text": "Introduction\nThis project was developed as part of COP 5725: Database Systems to showcase the complete process of designing and implementing a database, ie, Conceptual design, logical design, and Physical Design. We will develop a high-level viwee of the data and relationships. Translate that into a logicial model suitable for a relational database. Then finally convert the logical model into an actual database using MYSQL.\nThe focus of our team will be to build a relational database tailored to the operations of a Dungeon and Dragons ecology, encompassing areas like Player and Character records, inventory management, locations, and Bosses. We started by identifying relevant entities and their relationships, followed by crafting an Enhanced Entity-Relationship (EER) diagram that included cardinalities, strong and weak entities, and hierarchical structures like supertypes and subtypes. After applying necessary constraints and normalizing the schema to Third Normal Form (3NF), we implemented the database using MySQL, filled it with sample data, and developed advanced queries to derive valuable insights. The project concluded with a reverse-engineered ER diagram to confirm the alignment between the original design and its actual implementation."
  },
  {
    "objectID": "Phase3.html",
    "href": "Phase3.html",
    "title": "COP-5725---Group-Project",
    "section": "",
    "text": "This database stores and manages our ecology, encounters, and progression systems within our Dungeons & Dragons inspired role-playing game. It includes 12 major entities central to gameplay mechanics. One of these entities is the MONSTER entity, which represents creatures that characters can battle during their adventures.\n\n\nThe MONSTER entity is related to the NPC, CLASS, and RACE entities.\n\nSince every monster is also an NPC, the MONSTER entity is modeled as a subtype of the NPC entity (supertype). This captures the idea that monsters share all attributes of NPCs, such as name and faction, but also have unique characteristics relevant to combat.\nEach monster can optionally be associated with a combat class (e.g., Berserker, Spellcaster), making it related to the CLASS entity.\nMonsters may also have a racial origin (e.g., Dragon, Undead), requiring a relationship with the RACE entity.\n\n\n\n\n\n\n\n\n\n\n\n\nAttribute\nType\nDescription\n\n\n\n\nMonsterID\nINT (PK, FK)\nUnique identifier; also acts as foreign key to NPC\n\n\nName\nVARCHAR\nName/type of the monster (e.g., \"Frost Troll\")\n\n\nCR\nFLOAT\nChallenge Rating; used for encounter balancing\n\n\nHP\nINT\nHit Points; how much damage the monster can take\n\n\nAC\nINT\nArmor Class; how hard it is to hit the monster\n\n\nType\nVARCHAR\nCategory such as Beast, Fiend, Dragon, etc.\n\n\nXP\nINT\nExperience points granted when defeated\n\n\nRaceID\nINT (FK)\nForeign key linking to RACE\n\n\nClassID\nINT (FK)\nForeign key linking to CLASS (optional)\n\n\n\n\n\n\n\nOne-to-One (Mandatory) with NPC: Every monster must also be an NPC.\nMany-to-One (Optional) with CLASS: Many monsters may share a combat role.\nMany-to-One (Optional) with RACE: Many monsters may share a racial type.\n\n\n\n\nThe MONSTER entity is further specialized by the BOSS entity. Some monsters are elevated to boss status, making them tougher and more unique. These creatures often serve as major enemies or final challenges within campaigns.\n\nThe BOSS entity is modeled as a subtype of the MONSTER entity, representing this additional level of specialization.\nAll bosses are monsters, but not all monsters are bosses.\n\nThis structure supports a rich and extensible combat ecosystem, allowing monsters to be categorized and extended according to gameplay needs, while maintaining strong data integrity and consistency."
  },
  {
    "objectID": "Phase3.html#specification-of-the-monster-entity",
    "href": "Phase3.html#specification-of-the-monster-entity",
    "title": "COP-5725---Group-Project",
    "section": "",
    "text": "This database stores and manages our ecology, encounters, and progression systems within our Dungeons & Dragons inspired role-playing game. It includes 12 major entities central to gameplay mechanics. One of these entities is the MONSTER entity, which represents creatures that characters can battle during their adventures.\n\n\nThe MONSTER entity is related to the NPC, CLASS, and RACE entities.\n\nSince every monster is also an NPC, the MONSTER entity is modeled as a subtype of the NPC entity (supertype). This captures the idea that monsters share all attributes of NPCs, such as name and faction, but also have unique characteristics relevant to combat.\nEach monster can optionally be associated with a combat class (e.g., Berserker, Spellcaster), making it related to the CLASS entity.\nMonsters may also have a racial origin (e.g., Dragon, Undead), requiring a relationship with the RACE entity.\n\n\n\n\n\n\n\n\n\n\n\n\nAttribute\nType\nDescription\n\n\n\n\nMonsterID\nINT (PK, FK)\nUnique identifier; also acts as foreign key to NPC\n\n\nName\nVARCHAR\nName/type of the monster (e.g., \"Frost Troll\")\n\n\nCR\nFLOAT\nChallenge Rating; used for encounter balancing\n\n\nHP\nINT\nHit Points; how much damage the monster can take\n\n\nAC\nINT\nArmor Class; how hard it is to hit the monster\n\n\nType\nVARCHAR\nCategory such as Beast, Fiend, Dragon, etc.\n\n\nXP\nINT\nExperience points granted when defeated\n\n\nRaceID\nINT (FK)\nForeign key linking to RACE\n\n\nClassID\nINT (FK)\nForeign key linking to CLASS (optional)\n\n\n\n\n\n\n\nOne-to-One (Mandatory) with NPC: Every monster must also be an NPC.\nMany-to-One (Optional) with CLASS: Many monsters may share a combat role.\nMany-to-One (Optional) with RACE: Many monsters may share a racial type.\n\n\n\n\nThe MONSTER entity is further specialized by the BOSS entity. Some monsters are elevated to boss status, making them tougher and more unique. These creatures often serve as major enemies or final challenges within campaigns.\n\nThe BOSS entity is modeled as a subtype of the MONSTER entity, representing this additional level of specialization.\nAll bosses are monsters, but not all monsters are bosses.\n\nThis structure supports a rich and extensible combat ecosystem, allowing monsters to be categorized and extended according to gameplay needs, while maintaining strong data integrity and consistency."
  },
  {
    "objectID": "Phase3.html#relationships-structure-analysis",
    "href": "Phase3.html#relationships-structure-analysis",
    "title": "COP-5725---Group-Project",
    "section": "Relationships & Structure Analysis",
    "text": "Relationships & Structure Analysis\nList all relationships along with their cardinalities (e.g., one-to-many, many-to-many) and participation ratios (total vs. partial participation).\n\nCardinality Table\n\n\n\n\n\n\n\n\nEntity\nCardinality\nDescription\n\n\n\n\nPLAYER and PLAYER_CHARACTER\nOne to Many (1:N)\nOne player plays many characters\n\n\nPLAYER and PLAYER_Achievement\nOne to Many (1:N)\nOne player earns many player_achievements\n\n\nPLAYER_Achievement ACHIEVEMENT\nOne to Many (1:N)\nOne player’s achievements are\n\n\nPLAYER_Character and CHARACTER\nOne to One (1:1)\nOne PLAYER_CHARACTER belongs to one character instance\n\n\nCHARACTER and CLASS\nOne to One (1:1)\nOne CHARACTER belongs to exactly one CLASS\n\n\nCHARACTER and RACE\nOne to One (1:1)\nOne CHARACTER belongs to exactly one RACE\n\n\nCHARACTER and EQUIPMENT\nOne to Many (1:N)\nOne CHARACTER equips one or more EQUIPMENTs\n\n\nBOSS and MONSTER\nOne to Many (1:N)\nOne BOSS supervises many MONSTERs\n\n\nMONSTER and NPC\nOne to Many (1:N)\nOne MONSTER relates to many NPCs\n\n\nNPC and NPC_Faction\nOne to Many (1:N)\nOne NPC belongs to many factions\n\n\nNPC and NPC_Location\nOne to Many (1:N)\nOne NPC is located in one or more locations\n\n\nNPC and CLASS\nOne to One (1:1)\nOne NPC has belongs to one class\n\n\nNPC and RACE\nOne to One (1:1)\nOne NPC belongs to one race\n\n\nCLASS and CLASS_SPELL\nOne to Many (1:N)\nOne Class has many spells\n\n\nCLASS_SPELL and SPELL\nOne to Many (1:N)\nOne Class Spell teaches many spells\n\n\nCHARACTER and MONSTER\nOne to Many (1:N)\nOne Character fights many Monsters\n\n\nCHARACTER and CHARACTER_EVENT\nOne to Many (1:N)\nOne Character participates in many Character Events\n\n\nEVENT and NPC\nMany to Many (N:N)\nMany NPCs participate in many Events\n\n\n\n\n\nParticipation Ratio Table\n\n\n\n\n\n\n\n\nEntity\nParticipation\nDescription\n\n\n\n\nPlayer and Character\nTotal/Mandatory (1)\nA character must be played by a player\n\n\n\nPartial/Optional(0)\nOne player can play 0,1, or many characters\n\n\nPLAYER and PLAYER_CHARACTER\nTotal/Mandatory (1)\nOne player_character must belong to exactly one player\n\n\n\nTotal/Mandatory (1)\nEach player must have a player_character\n\n\nPLAYER and PLAYER_Achievement\nTotal/Mandatory (1)\nPlayer_achievement must belong to exactly one player\n\n\nPLAYER_Achievement ACHIEVEMENT\nTotal/Mandatory (1)\nEach player_achievement must belong to one or more\n\n\n\nPartial/Optional(0)\nachievements. Many achievements belong to one\n\n\n\n\nplayer_achievement\n\n\nPLAYER_Character and CHARACTER\nTotal/Mandatory (1)\nEach Player_Character has exactly one Character\n\n\n\nTotal/Mandatory (1)\nOne PLAYER_CHARACTER belongs to one Character\n\n\nCHARACTER and CLASS\nTotal/Mandatory (1)\nEach Character must have exactly one class\n\n\n\nTotal/Mandatory (1)\nEach Class must have a character it belongs to\n\n\nCHARACTER and RACE\nTotal/Mandatory (1)\nEach Character must have exactly one race\n\n\n\nTotal/Mandatory (1)\nEach race must have a character it belongs to\n\n\nCHARACTER and EQUIPMENT\nTotal/Mandatory (1)\nIf equipment is equipped, it is be equipped to character\n\n\n\nPartial/Optional(0)\nAll equipment is not necessarily equipped to characters\n\n\nBOSS and MONSTER\nTotal/Mandatory (1)\nA Boss must be a type of Monster\n\n\n\nTotal/Mandatory (1)\n\n\n\nMONSTER and NPC\nTotal/Mandatory (1)\nA Monster must be a type of NPC\n\n\n\nTotal/Mandatory (1)\n\n\n\nNPC and NPC_Faction\nTotal/Mandatory (1)\nOne NPC must belong to at least one faction\n\n\n\nTotal/Mandatory (1)\nIf a faction exists, it must belong to an NPC\n\n\nNPC and NPC_Location\nTotal/Mandatory (1)\nAn NPC must belong to a location\n\n\n\nPartial/Optional(0)\nA location can be empty, e.g., no NPCs are there\n\n\nNPC and CLASS\nTotal/Mandatory (1)\nAn NPC must belong to exactly one class\n\n\n\nTotal/Mandatory (1)\nA class must belong to an NPC\n\n\nNPC and RACE\nTotal/Mandatory (1)\nOne NPC belongs to one race\n\n\n\nTotal/Mandatory (1)\nA Race must belong to an NPC\n\n\nCLASS and CLASS_SPELL\nTotal/Mandatory (1)\nA class spell must belong to a class\n\n\n\nPartial/Optional(0)\nA class may not have any class spells\n\n\nCLASS_SPELL and SPELL\nTotal/Mandatory (1)\nA spell must be taught by a class spell\n\n\n\nPartial/Optional(0)\nA class spell may teach many or no spells\n\n\nCHARACTER and MONSTER\nTotal/Mandatory (1)\nA character must battle at least one monster\n\n\n\nPartial/Optional(0)\nA monster may or may not battle a character\n\n\nCHARACTER and CHARACTER_EVENT\nTotal/Mandatory (1)\nA character event must occur with one character\n\n\n\nPartial/Optional(0)\nA character can exist without character events\n\n\nEVENT and NPC\nPartial/Optional(0)\nAn NPC can exist without participating in events\n\n\n\nPartial/Optional(0)\nEvents can exist without participating NPCs"
  },
  {
    "objectID": "Phase3.html#identify-and-explain",
    "href": "Phase3.html#identify-and-explain",
    "title": "COP-5725---Group-Project",
    "section": "Identify and explain",
    "text": "Identify and explain\n\nStrong vs. weak entities\nOur database includes a variety of strong and weak entities to represent the complexity of the Dungeons & Dragons ecology.\nStrong Entities include:\nPlayer: Represents users of the system.\nCharacter: The core avatar controlled by a player.\nClass, Race, Spell, Equipment, NPC, Event, and Achievement: Each with independent existence and primary keys.\n\n\nWeak Entities include (Melanie Ortiz):\nMonster: Depends on Race and Class for full definition.\nBoss: A subtype of Monster, inheriting its attributes and adding boss-specific ones like PhaseCount and Lair.\nClassSpell: Links Class and Spell in a many-to-one relationship.\nCharacterEquipment: A many-to-many relationship between Character and Equipment.\nCharacterEvent: A many-to-many relationship between Character and Event.\nPlayerAchievement: A many-to-many relationship between Player and Achievement.\nThese weak entities rely on foreign keys and composite keys to maintain referential integrity and represent dependent relationships.\n\n\nSupertypes and subtypes with their distinguishing features.\nWe implemented a supertype-subtype relationship to model hierarchical data:\nSupertype: Monster\nSubtype: Boss\nThe Boss entity inherits all attributes from Monster (e.g., HP, AC, CR) and introduces additional attributes like PhaseCount and Lair. This structure allows us to distinguish between regular monsters and more complex boss encounters while maintaining a unified combat model."
  },
  {
    "objectID": "Phase3.html#table-column-constraints",
    "href": "Phase3.html#table-column-constraints",
    "title": "COP-5725---Group-Project",
    "section": "Table & Column Constraints",
    "text": "Table & Column Constraints\n\nPlayer Table\nTable Constraint\n\nPrimary Key: PlayerID\n\nColumn Constraints\n\nNot Null: Name, Email, JoinDate\nUnique: Email\n\n\n\n\nCharacter Table\nTable Constraint\n\nPrimary Key: CharacterID\nForeign Key: PlayerID\nOn Delete: CASCADE, On Update: CASCADE\nForeign Key: ClassID\nOn Delete: SET NULL, On Update: SET NULL\nForeign Key: RaceID\nOn Delete: SET NULL, On Update: SET NULL\n\nColumn Constraints\n\nNot Null: Name, Level, XP\nCheck: Level &gt;= 1, XP &gt;= 0\n\n\n\n\nClass Table\nTable Constraint\n\nPrimary Key: ClassID\n\nColumn Constraints\n\nNot Null: Name\n\n\n\n\nRace Table\nTable Constraint\n\nPrimary Key: RaceID\n\nColumn Constraints\n\nNot Null: Name\n\n\n\n\nSpell Table\nTable Constraint\n\nPrimary Key: SpellID\n\nColumn Constraints\n\nNot Null: Name, Level\nCheck: Level &gt;= 0\n\n\n\n\nEquipment Table\nTable Constraint\n\nPrimary Key: EquipmentID\n\nColumn Constraints\n\nNot Null: Name, Equipped\nCheck: Equipped IN (TRUE, FALSE)\n\n\n\n\nNPC Table\nTable Constraint\n\nPrimary Key: NPCID\nForeign Key: ClassID\nOn Delete: SET NULL, On Update: SET NULL\nForeign Key: RaceID\nOn Delete: SET NULL, On Update: SET NULL\nForeign Key: FactionID\nOn Delete: SET NULL, On Update: SET NULL\nForeign Key: LocationID\nOn Delete: SET NULL, On Update: SET NULL\n\nColumn Constraints\n\nNot Null: Name\n\n\n\n\nEvent Table\nTable Constraint\n\nPrimary Key: EventID\n\nColumn Constraints\n\nNot Null: Name, Date"
  },
  {
    "objectID": "Phase3.html#achievement-table",
    "href": "Phase3.html#achievement-table",
    "title": "COP-5725---Group-Project",
    "section": "Achievement Table",
    "text": "Achievement Table\nTable Constraint\n\nPrimary Key: AchievementID\n\nColumn Constraints\n\nNot Null: Title\n\n\n\nMonster Table\nTable Constraint\n\nPrimary Key: MonsterID\nForeign Key: RaceID\nOn Delete: SET NULL, On Update: SET NULL\nForeign Key: ClassID\nOn Delete: SET NULL, On Update: SET NULL\nForeign Key: MonsterID (From NPC)\nOn Delete: CASCADE, On Update: CASCADE\n\nColumn Constraints\n\nNot Null: Name, HP, AC, CR\nCheck: HP &gt;= 0, AC &gt;= 0, CR &gt;= 0\n\n\n\n\nBoss Table\nTable Constraint\n\nPrimary Key: MonsterID\nForeign Key: MonsterID\nOn Delete: CASCADE, On Update: CASCADE\n\nColumn Constraints\n\nNot Null: PhaseCount\nCheck: PhaseCount &gt;= 1\n\n\n\n\nClassSpell Table\nTable Constraint\n\nPrimary Key: ClassID, SpellID\nForeign Keys:\n\nClassID (On Delete: CASCADE, On Update: CASCADE)\nSpellID (On Delete: CASCADE, On Update: CASCADE)\n\n\n\n\n\nCharacterEquipment Table\nTable Constraint\n\nPrimary Key: CharacterID, EquipmentID\nForeign Keys:\n\nCharacterID (On Delete: CASCADE, On Update: CASCADE)\nEquipmentID (On Delete: CASCADE, On Update: CASCADE)\n\n\n\n\n\nCharacterEvent Table\nTable Constraint\n\nPrimary Key: CharacterID, EventID\nForeign Keys:\n\nCharacterID (On Delete: CASCADE, On Update: CASCADE)\nEventID (On Delete: CASCADE, On Update: CASCADE)\n\n\n\n\n\nPlayerAchievement Table\nTable Constraint\n\nPrimary Key: PlayerID, AchievementID\nForeign Keys:\n\nPlayerID (On Delete: CASCADE, On Update: CASCADE)\nAchievementID (On Delete: CASCADE, On Update: CASCADE)\n\n\n\n\n\nFaction Table\nTable Constraint\n\nPrimary Key: FactionID\n\nColumn Constraints\n\nNot Null: Name\n\n\n\n\nLocation Table\nTable Constraint\n\nPrimary Key: LocationID\n\nColumn Constraints\n\nNot Null: Name\nOptional: Region, EnvironmentType, Coordinates (if included)"
  },
  {
    "objectID": "Phase3.html#normalization-goals",
    "href": "Phase3.html#normalization-goals",
    "title": "COP-5725---Group-Project",
    "section": "Normalization Goals",
    "text": "Normalization Goals\nAll tables in our Dungeons & Dragons database schema are normalized to Third Normal Form (3NF). This was straightforward to confirm due to the minimal attribute design and the absence of redundant or repeating data.\nEach entity contains only attributes that are fully dependent on its primary key, and no transitive dependencies exist. Relationship tables use composite keys to maintain referential integrity without introducing redundancy.\nThis normalization ensures:\n\nEfficient data storage\nLogical separation of concerns\nSimplified query design\nConsistency across relationships"
  },
  {
    "objectID": "tableSQL.html",
    "href": "tableSQL.html",
    "title": "COP-5725---Group-Project",
    "section": "",
    "text": "CREATE TABLE Player (\n  PlayerID INT PRIMARY KEY,\n\n  Name VARCHAR(255),\n\n  UserName VARCHAR(255),\n\n  CharacterID INT, \n\n  FOREIGN KEY (CharacterID) REFERENCES Character(CharacterID)\n);\n\nCREATE TABLE Character (\n\n  CharacterID INT PRIMARY KEY,\n\n  Name VARCHAR(255),\n\n  Level INT,\n\n  XP INT,\n\n  HP INT,\n\n  Mana INT,\n\n  Alignment VARCHAR(255),\n\n  charClassID INT,  \n\n  charRaceID INT,  \n\n  FOREIGN KEY (charClassID) REFERENCES Class(ClassID),\n\n  FOREIGN KEY (charRaceID) REFERENCES Race(RaceID)\n);\n\nCREATE TABLE Class (\n\n  ClassID INT PRIMARY KEY,\n\n  ClassName VARCHAR(255),\n\n  HitDie INT,\n\n  PrimaryStat VARCHAR(255),\n\n  Description TEXT\n);\n\nCREATE TABLE Race (\n\n  RaceID INT PRIMARY KEY,\n\n  RaceName VARCHAR(255),\n\n  BonusStat VARCHAR(255),\n\n  Description TEXT\n\n);\n\nCREATE TABLE Spell (\n\n  SpellID INT PRIMARY KEY,\n\n  Name VARCHAR(255),\n\n  Level INT,\n\n  School VARCHAR(255),\n\n  Effect TEXT,\n\n  CastingTime VARCHAR(255),\n\n  Duration VARCHAR(255)\n\n);\n\nCREATE TABLE ClassSpell (\n\n  ClassID INT,   \n\n  SpellID INT,    \n\n  PRIMARY KEY (ClassID, SpellID),\n\n  FOREIGN KEY (ClassID) REFERENCES Class(ClassID),\n\n  FOREIGN KEY (SpellID) REFERENCES Spell(SpellID)\n\n);\n\nCREATE TABLE Monster (\n\n  MonsterID INT PRIMARY KEY,\n\n  Name VARCHAR(255),\n\n  RaceID INT,  \n\n  ClassID INT,  \n\n  CR FLOAT,  \n\n  HP INT,   \n\n  AC INT,       \n\n  Type VARCHAR(255),\n\n  XP INT,\n\n  FOREIGN KEY (RaceID) REFERENCES Race(RaceID),\n\n  FOREIGN KEY (ClassID) REFERENCES Class(ClassID)\n\n);\n\nCREATE TABLE Boss (\n\n  BossID INT PRIMARY KEY,\n\n  Name VARCHAR(255),\n\n  MonsterID INT,   \n\n  PhaseCount INT,   \n\n  Lair VARCHAR(255),\n\n  FOREIGN KEY (MonsterID) REFERENCES Monster(MonsterID)\n\n);\n\nCREATE TABLE Equipment (\n\n  EquipmentID INT PRIMARY KEY,\n\n  Name VARCHAR(255),\n\n  Type VARCHAR(255),\n\n  Bonus VARCHAR(255),\n\n  Rarity VARCHAR(255),\n\n  Description TEXT\n);\n\nCREATE TABLE CharacterEquipment (\n  CharacterID INT,  \n\n  EquipmentID INT,  \n\n  PRIMARY KEY (CharacterID, EquipmentID),\n\n  FOREIGN KEY (CharacterID) REFERENCES Character(CharacterID),\n\n  FOREIGN KEY (EquipmentID) REFERENCES Equipment(EquipmentID)\n\n);\n\nCREATE TABLE NPC (\n\n  NPCID INT PRIMARY KEY,\n\n  Name VARCHAR(255),\n\n  Role VARCHAR(255),\n\n  Faction VARCHAR(255),\n\n  Location VARCHAR(255)\n\n);\n\nCREATE TABLE Event (\n\n  EventID INT PRIMARY KEY,\n\n  Name VARCHAR(255),\n\n  Date DATE,\n\n  Description TEXT\n\n);\n\nCREATE TABLE CharacterEvent (\n\n  CharacterID INT,  \n\n  EventID INT,      \n\n  PRIMARY KEY (CharacterID, EventID),\n\n  FOREIGN KEY (CharacterID) REFERENCES Character(CharacterID),\n\n  FOREIGN KEY (EventID) REFERENCES Event(EventID)\n\n);\n\nCREATE TABLE Achievement (\n\n  AchievementID INT PRIMARY KEY,\n\n  Name VARCHAR(255),\n\n  Description TEXT,\n\n  XPReward INT\n);\n\nCREATE TABLE PlayerAchievement (\n  PlayerID INT,     \n\n  AchievementID INT, \n\n  PRIMARY KEY (PlayerID, AchievementID),\n\n  FOREIGN KEY (PlayerID) REFERENCES Player(PlayerID),\n\n  FOREIGN KEY (AchievementID) REFERENCES Achievement(AchievementID)\n\n);"
  },
  {
    "objectID": "ERD_mid_diagram.html",
    "href": "ERD_mid_diagram.html",
    "title": "ER Diagram Assignment - Invoice Management System (with Weak Entity)",
    "section": "",
    "text": "Introduction\nFor this project we are designing an Entity-Relationship (ER) diagram using Crow’s Foot notation to model a sales and invoicing system. This diagram should includea all relationship cardinalities, highlights strong and weak entities, and define suitable attributes for each one of the entities and then mark which attribute are required or optional. Additionally, primary and foreign keys are identified to in each table within the database schema.\n\n\n\n\n\nerDiagram\n    DIVISION ||--o{ DEPARTMENT : operates\n    DEPARTMENT ||--o{ EMPLOYEE : employs\n    EMPLOYEE ||--o{ PROJECT_ASSIGNMENT : assigned_to\n    PROJECT ||--o{ PROJECT_ASSIGNMENT : includes\n    EMPLOYEE ||--|| DEPARTMENT : manages\n    EMPLOYEE ||--|| DIVISION : runs\n\n    DIVISION {\n        int division_id PK \"Required\"\n        string name \"Required\"\n        int manager_id FK \"Required\"\n    }\n    DEPARTMENT {\n        int department_id PK \"Required\"\n        string name \"Required\"\n        int division_id FK \"Required\"\n        int manager_id FK \"Required\"\n    }\n    EMPLOYEE {\n        int employee_id PK \"Required\"\n        string name \"Required\"\n        string title \"Optional\"\n        int department_id FK \"Optional\"\n    }\n    PROJECT {\n        int project_id PK \"Required\"\n        string project_name \"Required\"\n    }\n    PROJECT_ASSIGNMENT {\n        int employee_id PK, FK \"Required (Composite PK)\"\n        int project_id PK, FK \"Required (Composite PK)\"\n    }"
  },
  {
    "objectID": "ERDiagram_Assignment.html",
    "href": "ERDiagram_Assignment.html",
    "title": "ER Diagram Assignment - Invoice Management System (with Weak Entity)",
    "section": "",
    "text": "For this project we are designing an Entity-Relationship (ER) diagram using Crow’s Foot notation to model a sales and invoicing system. This diagram should includea all relationship cardinalities, highlights strong and weak entities, and define suitable attributes for each one of the entities and then mark which attribute are required or optional. Additionally, primary and foreign keys are identified to in each table within the database schema.\n\n\n\n\n\nerDiagram\n    SALESREP ||--o{ INVOICE : writes\n    CUSTOMER ||--o{ INVOICE : receives\n    INVOICE ||--o{ LINE : includes\n    PRODUCT ||--o{ LINE : referenced_by\n    VENDOR ||--o{ PRODUCT : supplies\n\n    SALESREP {\n        int salesrep_id PK \"Required\"\n        string name \"Required\"\n        string email \"Optional\"\n    }\n\n    CUSTOMER {\n        int customer_id PK \"Required\"\n        string name \"Required\"\n        string phone \"Optional\"\n        string email \"Optional\"\n    }\n\n    INVOICE {\n        int invoice_id PK \"Required\"\n        date invoice_date \"Required\"\n        int salesrep_id FK \"Required\"\n        int customer_id FK \"Required\"\n    }\n\n    LINE {\n        int invoice_id PK, FK \"Required (Part of Composite PK)\"\n        int product_id PK, FK \"Required (Part of Composite PK)\"\n        int quantity \"Required\"\n        decimal price \"Required\"\n    }\n\n    PRODUCT {\n        int product_id PK \"Required\"\n        string product_name \"Required\"\n        decimal unit_price \"Required\"\n        int vendor_id FK \"Required\"\n    }\n\n    VENDOR {\n        int vendor_id PK \"Required\"\n        string vendor_name \"Required\"\n        string contact_phone \"Optional\"\n    }\n\n\n\n\n\n\n\n\n\n\nSALESREP to INVOICE: One-to-many (1:M)\nCUSTOMER to INVOICE: One-to-many (1:M)\nINVOICE to LINE: One-to-many (1:M)\n(LINE is weak and depends on INVOICE)\nPRODUCT to LINE: One-to-many (1:M)\n(Each LINE references one product)\nVENDOR to PRODUCT: One-to-many (1:M)\n\n\n\n\n\n\n\n\nEntity\nPrimary Key(s)\nForeign Key(s)\n\n\n\n\nSALESREP\nsalesrep_id\n—\n\n\nCUSTOMER\ncustomer_id\n—\n\n\nINVOICE\ninvoice_id\nsalesrep_id, customer_id\n\n\nLINE\n(invoice_id, product_id)\ninvoice_id, product_id\n\n\nPRODUCT\nproduct_id\nvendor_id\n\n\nVENDOR\nvendor_id\n—\n\n\n\n\n\n\n\n\nAll but `LINE’ is a Strong Entity\n\nEach one has its own Primary key and not composite, not leading to a dependancy\n\nLINE is a weak entity:\n\nCannot exist without an associated INVOICE and PRODUCT.\nIdentified by a composite key: (invoice_id, product_id).\nDepends on INVOICE as the owner entity."
  },
  {
    "objectID": "ERDiagram_Assignment.html#cardinalities",
    "href": "ERDiagram_Assignment.html#cardinalities",
    "title": "ER Diagram Assignment - Invoice Management System (with Weak Entity)",
    "section": "",
    "text": "SALESREP to INVOICE: One-to-many (1:M)\nCUSTOMER to INVOICE: One-to-many (1:M)\nINVOICE to LINE: One-to-many (1:M)\n(LINE is weak and depends on INVOICE)\nPRODUCT to LINE: One-to-many (1:M)\n(Each LINE references one product)\nVENDOR to PRODUCT: One-to-many (1:M)"
  },
  {
    "objectID": "ERDiagram_Assignment.html#primary-foreign-keys",
    "href": "ERDiagram_Assignment.html#primary-foreign-keys",
    "title": "ER Diagram Assignment - Invoice Management System (with Weak Entity)",
    "section": "",
    "text": "Entity\nPrimary Key(s)\nForeign Key(s)\n\n\n\n\nSALESREP\nsalesrep_id\n—\n\n\nCUSTOMER\ncustomer_id\n—\n\n\nINVOICE\ninvoice_id\nsalesrep_id, customer_id\n\n\nLINE\n(invoice_id, product_id)\ninvoice_id, product_id\n\n\nPRODUCT\nproduct_id\nvendor_id\n\n\nVENDOR\nvendor_id\n—"
  },
  {
    "objectID": "ERDiagram_Assignment.html#weak-entity-explanation",
    "href": "ERDiagram_Assignment.html#weak-entity-explanation",
    "title": "ER Diagram Assignment - Invoice Management System (with Weak Entity)",
    "section": "",
    "text": "All but `LINE’ is a Strong Entity\n\nEach one has its own Primary key and not composite, not leading to a dependancy\n\nLINE is a weak entity:\n\nCannot exist without an associated INVOICE and PRODUCT.\nIdentified by a composite key: (invoice_id, product_id).\nDepends on INVOICE as the owner entity."
  },
  {
    "objectID": "ERdiagram.html",
    "href": "ERdiagram.html",
    "title": "COP-5725---Group-Project",
    "section": "",
    "text": "Players and Characters\n\n\n\n\n\n%%{init: {\"er\": {\"layoutDirection\": \"TB\"}, \"themeVariables\": {\"fontSize\": \"16px\"}}}%%\nerDiagram\n    PLAYER ||--o{ PLAYER_CHARACTER : \"Has Character\"\n    CHARACTER ||--|| PLAYER_CHARACTER : \"Belongs to\"\n    CHARACTER ||--|| CLASS : \"Belongs to\"\n    CHARACTER ||--|| RACE : \"Belongs to\"\n    PLAYER ||--o{ PLAYER_Achievement : \"Earns\"\n    PLAYER_Achievement ||--o{ ACHIEVEMENT : \"Achievement\"\n\n\n\n\n\n\n\n\nCharacters and Equipment\n\n\n\n\n\n%%{init: {\"er\": {\"layoutDirection\": \"TB\"}, \"themeVariables\": {\"fontSize\": \"16px\"}}}%%\nerDiagram\n    CHARACTER ||--o{ CHARACTER_EQUIPMENT : \"Equips\"\n    EQUIPMENT ||--o{ CHARACTER_EQUIPMENT : \"Equipped by\"\n\n\n\n\n\n\n\n\nNPCs and World\n\n\n\n\n\n%%{init: {\"er\": {\"layoutDirection\": \"TB\"}, \"themeVariables\": {\"fontSize\": \"16px\"}}}%%\nerDiagram\n    NPC ||--|{ NPC_Faction : \"Belongs to\"\n    NPC ||--o{ NPC_LOCATION : \"Located in\"\n    NPC ||--|| Class : \"Has Class\"\n    NPC ||--|| Race : \"Is Race\"\n    MONSTER ||--|{ NPC : \"Is Monster\"\n    BOSS ||--|{ MONSTER : \"Is Boss\"\n\n\n\n\n\n\n\n\nSpells and Combat Events\n\n\n\n\n\n%%{init: {\"er\": {\"layoutDirection\": \"TB\"}, \"themeVariables\": {\"fontSize\": \"16px\"}}}%%\nerDiagram\n    CLASS_SPELL ||--o{ SPELL : \"Teaches\"\n    CLASS ||--o{ CLASS_SPELL : \"Has Spells\"\n    CHARACTER ||--o{ MONSTER : \"Fights\"\n    CHARACTER ||--o{ CHARACTER_EVENT : \"Participates in\"\n    EVENT ||--o{ CHARACTER_EVENT : \"Involves\"\n    NPC }o--o{ EVENT : \"Can participate\""
  }
]